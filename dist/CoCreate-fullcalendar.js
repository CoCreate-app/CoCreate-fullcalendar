/*! For license information please see CoCreate-fullcalendar.js.LICENSE.txt */
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CoCreate=n():(t.CoCreate=t.CoCreate||{},t.CoCreate.fullcalendar=n())}(this,(function(){return(()=>{var __webpack_modules__={"./node_modules/@cocreate/action/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// -testing1\nconst CoCreateAction = {\n  attribute: 'data-actions',\n  actions: {},\n  selectedStage: [],\n  stageIndex: 0,\n  selectedElement: null,\n  \n  completedEventName: 'completedEvent',\n  \n  __init: function() {\n    this.actionButtonEvent()\n  },\n\n  actionButtonEvent: function() {\n    const self = this;\n    document.addEventListener('click', function(event) {\n      let btn = event.target;\n      if (!btn.getAttribute('data-actions')) {\n        btn = event.target.closest('[data-actions]');\n      }\n      if (!btn) return;\n      event.preventDefault();\n\n      let actions = (btn.getAttribute(self.attribute) || \"\").replace(/\\s/g, '').split(',');\n      if (actions.length == 0) return;\n      self.stageIndex = 0;\n      self.selectedStage = actions;\n      \n      //. run function\n      self.selectedElement = btn;\n      self.__runActionFunc();\n    })\n  },\n  \n  init: function({action, callback, endEvent}) {\n    this.registerEvent(action, callback, null, endEvent);\n  },\n  \n  /**\n   * key: string\n   * runFunc: function\n   * instance: object\n   * endEvent: string\n   **/\n  registerEvent: function(key, runFunc, instance, endEvent) {\n    if (this.actions[key]) {\n      return;\n    }\n    \n    this.actions[key] = {\n      key: key,\n      runFunc: runFunc,\n      instance: instance || window,\n      endEvent: endEvent\n    }\n    //. register events\n    \n    for (let __key in this.actions) {\n      if (__key != key && this.actions[__key]['endEvent'] === endEvent) {\n        return;\n      }\n    }\n    \n    //. register events\n    const _this = this;\n    document.addEventListener(endEvent, function(e) {\n      _this.__nextAction(endEvent, e.detail)\n    });\n  },\n  \n  __runActionFunc: function(data) {\n\n    if (this.stageIndex >= this.selectedStage.length) {\n\n      //. if latest case, it will be run aTag\n      if (this.stageIndex == this.selectedStage.length) {\n        this.__runAtag(this.selectedElement);        \n      }\n      return;\n    }\n    \n    const actionName = this.selectedStage[this.stageIndex];\n    //. run function\n    const action = this.actions[actionName];\n    if (action) {\n      if (action.runFunc) {\n        action.runFunc.call(null, this.selectedElement, data);\n      } else {\n        this.__nextAction(action.endEvent, {});\n      }\n    } else {\n      let status = this.__runSpecialAction(actionName, data);\n      if (status === \"next\") {\n        this.__moveNextAction();\n      }\n    }\n  },\n  \n  __nextAction: function(eventName, data) {\n    const key = this.selectedStage[this.stageIndex];\n    if (!key) {\n      return ;\n    }\n    if (eventName !== this.actions[key].endEvent) {\n      return;\n    }\n    this.__moveNextAction(data);\n  },\n  \n  __runAtag: function(button) {\n    var aTag = button.querySelector('a');\n          \n    if (aTag) {\n      // CoCreate.logic.setLinkProcess(aTag)\n    }\n  },\n  \n  //. special action\n  \n  __runSpecialAction: function(actionName, data) {\n    let matches = /(\\w+)\\{([a-zA-Z0-9_ \\-#$.]+)\\}/gm.exec(actionName)\n    \n    if (!matches || matches.length < 3) {\n      return \"next\";\n    }\n    \n    let type = matches[1], param = matches[2].trim()\n    if (!param) return \"next\";\n    \n    const self = this;\n    switch (type) {\n      case 'event':\n        console.log(\"Waiting Event....\");\n        document.addEventListener(param, (eventData) => {\n          console.log('Event Action (Received event from other section) ====== ' + param);\n          self.__moveNextAction(eventData);\n        }, { once: true })\n        break;\n      case 'timeout':\n        let delayTime = parseInt(param);\n        if (delayTime > 0) {\n          setTimeout(function() {\n            console.log(\"Timeout ======= \" + param)\n            self.__moveNextAction(data);\n          }, parseInt(param));\n        }\n        break;\n      case 'action':\n        let btn = document.querySelector(param);\n        if (btn) {\n          btn.click();\n        }\n        break;\n      default:\n        return \"next\";\n    }\n  },\n  \n  __moveNextAction: function(data) {\n    this.stageIndex ++;\n    this.__runActionFunc(data);\n  },\n}\n\n\nCoCreateAction.__init();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateAction);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mdWxsY2FsZW5kYXIvLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL2FjdGlvbi9zcmMvaW5kZXguanM/ZGM0OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUgsa0JBQWtCLDJCQUEyQjtBQUM3QztBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsNkNBQTZDO0FBQzdDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0EsMEJBQTBCLHVCQUF1Qjs7QUFFakQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLEdBQUcsYUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBOztBQUVBLGlFQUFlLGNBQWMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL2FjdGlvbi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtdGVzdGluZzFcbmNvbnN0IENvQ3JlYXRlQWN0aW9uID0ge1xuICBhdHRyaWJ1dGU6ICdkYXRhLWFjdGlvbnMnLFxuICBhY3Rpb25zOiB7fSxcbiAgc2VsZWN0ZWRTdGFnZTogW10sXG4gIHN0YWdlSW5kZXg6IDAsXG4gIHNlbGVjdGVkRWxlbWVudDogbnVsbCxcbiAgXG4gIGNvbXBsZXRlZEV2ZW50TmFtZTogJ2NvbXBsZXRlZEV2ZW50JyxcbiAgXG4gIF9faW5pdDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5hY3Rpb25CdXR0b25FdmVudCgpXG4gIH0sXG5cbiAgYWN0aW9uQnV0dG9uRXZlbnQ6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIGxldCBidG4gPSBldmVudC50YXJnZXQ7XG4gICAgICBpZiAoIWJ0bi5nZXRBdHRyaWJ1dGUoJ2RhdGEtYWN0aW9ucycpKSB7XG4gICAgICAgIGJ0biA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCdbZGF0YS1hY3Rpb25zXScpO1xuICAgICAgfVxuICAgICAgaWYgKCFidG4pIHJldHVybjtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGxldCBhY3Rpb25zID0gKGJ0bi5nZXRBdHRyaWJ1dGUoc2VsZi5hdHRyaWJ1dGUpIHx8IFwiXCIpLnJlcGxhY2UoL1xccy9nLCAnJykuc3BsaXQoJywnKTtcbiAgICAgIGlmIChhY3Rpb25zLmxlbmd0aCA9PSAwKSByZXR1cm47XG4gICAgICBzZWxmLnN0YWdlSW5kZXggPSAwO1xuICAgICAgc2VsZi5zZWxlY3RlZFN0YWdlID0gYWN0aW9ucztcbiAgICAgIFxuICAgICAgLy8uIHJ1biBmdW5jdGlvblxuICAgICAgc2VsZi5zZWxlY3RlZEVsZW1lbnQgPSBidG47XG4gICAgICBzZWxmLl9fcnVuQWN0aW9uRnVuYygpO1xuICAgIH0pXG4gIH0sXG4gIFxuICBpbml0OiBmdW5jdGlvbih7YWN0aW9uLCBjYWxsYmFjaywgZW5kRXZlbnR9KSB7XG4gICAgdGhpcy5yZWdpc3RlckV2ZW50KGFjdGlvbiwgY2FsbGJhY2ssIG51bGwsIGVuZEV2ZW50KTtcbiAgfSxcbiAgXG4gIC8qKlxuICAgKiBrZXk6IHN0cmluZ1xuICAgKiBydW5GdW5jOiBmdW5jdGlvblxuICAgKiBpbnN0YW5jZTogb2JqZWN0XG4gICAqIGVuZEV2ZW50OiBzdHJpbmdcbiAgICoqL1xuICByZWdpc3RlckV2ZW50OiBmdW5jdGlvbihrZXksIHJ1bkZ1bmMsIGluc3RhbmNlLCBlbmRFdmVudCkge1xuICAgIGlmICh0aGlzLmFjdGlvbnNba2V5XSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICB0aGlzLmFjdGlvbnNba2V5XSA9IHtcbiAgICAgIGtleToga2V5LFxuICAgICAgcnVuRnVuYzogcnVuRnVuYyxcbiAgICAgIGluc3RhbmNlOiBpbnN0YW5jZSB8fCB3aW5kb3csXG4gICAgICBlbmRFdmVudDogZW5kRXZlbnRcbiAgICB9XG4gICAgLy8uIHJlZ2lzdGVyIGV2ZW50c1xuICAgIFxuICAgIGZvciAobGV0IF9fa2V5IGluIHRoaXMuYWN0aW9ucykge1xuICAgICAgaWYgKF9fa2V5ICE9IGtleSAmJiB0aGlzLmFjdGlvbnNbX19rZXldWydlbmRFdmVudCddID09PSBlbmRFdmVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vLiByZWdpc3RlciBldmVudHNcbiAgICBjb25zdCBfdGhpcyA9IHRoaXM7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihlbmRFdmVudCwgZnVuY3Rpb24oZSkge1xuICAgICAgX3RoaXMuX19uZXh0QWN0aW9uKGVuZEV2ZW50LCBlLmRldGFpbClcbiAgICB9KTtcbiAgfSxcbiAgXG4gIF9fcnVuQWN0aW9uRnVuYzogZnVuY3Rpb24oZGF0YSkge1xuXG4gICAgaWYgKHRoaXMuc3RhZ2VJbmRleCA+PSB0aGlzLnNlbGVjdGVkU3RhZ2UubGVuZ3RoKSB7XG5cbiAgICAgIC8vLiBpZiBsYXRlc3QgY2FzZSwgaXQgd2lsbCBiZSBydW4gYVRhZ1xuICAgICAgaWYgKHRoaXMuc3RhZ2VJbmRleCA9PSB0aGlzLnNlbGVjdGVkU3RhZ2UubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuX19ydW5BdGFnKHRoaXMuc2VsZWN0ZWRFbGVtZW50KTsgICAgICAgIFxuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBhY3Rpb25OYW1lID0gdGhpcy5zZWxlY3RlZFN0YWdlW3RoaXMuc3RhZ2VJbmRleF07XG4gICAgLy8uIHJ1biBmdW5jdGlvblxuICAgIGNvbnN0IGFjdGlvbiA9IHRoaXMuYWN0aW9uc1thY3Rpb25OYW1lXTtcbiAgICBpZiAoYWN0aW9uKSB7XG4gICAgICBpZiAoYWN0aW9uLnJ1bkZ1bmMpIHtcbiAgICAgICAgYWN0aW9uLnJ1bkZ1bmMuY2FsbChudWxsLCB0aGlzLnNlbGVjdGVkRWxlbWVudCwgZGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9fbmV4dEFjdGlvbihhY3Rpb24uZW5kRXZlbnQsIHt9KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHN0YXR1cyA9IHRoaXMuX19ydW5TcGVjaWFsQWN0aW9uKGFjdGlvbk5hbWUsIGRhdGEpO1xuICAgICAgaWYgKHN0YXR1cyA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgdGhpcy5fX21vdmVOZXh0QWN0aW9uKCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBcbiAgX19uZXh0QWN0aW9uOiBmdW5jdGlvbihldmVudE5hbWUsIGRhdGEpIHtcbiAgICBjb25zdCBrZXkgPSB0aGlzLnNlbGVjdGVkU3RhZ2VbdGhpcy5zdGFnZUluZGV4XTtcbiAgICBpZiAoIWtleSkge1xuICAgICAgcmV0dXJuIDtcbiAgICB9XG4gICAgaWYgKGV2ZW50TmFtZSAhPT0gdGhpcy5hY3Rpb25zW2tleV0uZW5kRXZlbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5fX21vdmVOZXh0QWN0aW9uKGRhdGEpO1xuICB9LFxuICBcbiAgX19ydW5BdGFnOiBmdW5jdGlvbihidXR0b24pIHtcbiAgICB2YXIgYVRhZyA9IGJ1dHRvbi5xdWVyeVNlbGVjdG9yKCdhJyk7XG4gICAgICAgICAgXG4gICAgaWYgKGFUYWcpIHtcbiAgICAgIC8vIENvQ3JlYXRlLmxvZ2ljLnNldExpbmtQcm9jZXNzKGFUYWcpXG4gICAgfVxuICB9LFxuICBcbiAgLy8uIHNwZWNpYWwgYWN0aW9uXG4gIFxuICBfX3J1blNwZWNpYWxBY3Rpb246IGZ1bmN0aW9uKGFjdGlvbk5hbWUsIGRhdGEpIHtcbiAgICBsZXQgbWF0Y2hlcyA9IC8oXFx3KylcXHsoW2EtekEtWjAtOV8gXFwtIyQuXSspXFx9L2dtLmV4ZWMoYWN0aW9uTmFtZSlcbiAgICBcbiAgICBpZiAoIW1hdGNoZXMgfHwgbWF0Y2hlcy5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gXCJuZXh0XCI7XG4gICAgfVxuICAgIFxuICAgIGxldCB0eXBlID0gbWF0Y2hlc1sxXSwgcGFyYW0gPSBtYXRjaGVzWzJdLnRyaW0oKVxuICAgIGlmICghcGFyYW0pIHJldHVybiBcIm5leHRcIjtcbiAgICBcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2V2ZW50JzpcbiAgICAgICAgY29uc29sZS5sb2coXCJXYWl0aW5nIEV2ZW50Li4uLlwiKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihwYXJhbSwgKGV2ZW50RGF0YSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdFdmVudCBBY3Rpb24gKFJlY2VpdmVkIGV2ZW50IGZyb20gb3RoZXIgc2VjdGlvbikgPT09PT09ICcgKyBwYXJhbSk7XG4gICAgICAgICAgc2VsZi5fX21vdmVOZXh0QWN0aW9uKGV2ZW50RGF0YSk7XG4gICAgICAgIH0sIHsgb25jZTogdHJ1ZSB9KVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RpbWVvdXQnOlxuICAgICAgICBsZXQgZGVsYXlUaW1lID0gcGFyc2VJbnQocGFyYW0pO1xuICAgICAgICBpZiAoZGVsYXlUaW1lID4gMCkge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRpbWVvdXQgPT09PT09PSBcIiArIHBhcmFtKVxuICAgICAgICAgICAgc2VsZi5fX21vdmVOZXh0QWN0aW9uKGRhdGEpO1xuICAgICAgICAgIH0sIHBhcnNlSW50KHBhcmFtKSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdhY3Rpb24nOlxuICAgICAgICBsZXQgYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwYXJhbSk7XG4gICAgICAgIGlmIChidG4pIHtcbiAgICAgICAgICBidG4uY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBcIm5leHRcIjtcbiAgICB9XG4gIH0sXG4gIFxuICBfX21vdmVOZXh0QWN0aW9uOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgdGhpcy5zdGFnZUluZGV4ICsrO1xuICAgIHRoaXMuX19ydW5BY3Rpb25GdW5jKGRhdGEpO1xuICB9LFxufVxuXG5cbkNvQ3JlYXRlQWN0aW9uLl9faW5pdCgpO1xuXG5leHBvcnQgZGVmYXVsdCBDb0NyZWF0ZUFjdGlvbjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/action/src/index.js\n")},"./node_modules/@cocreate/crud-client/src/crud.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// import {getCommonParams, getCommonParamsExtend, generateSocketClient} from \"@cocreate/socket-client/src/common-fun.js\"\n\n(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! @cocreate/socket-client/src/common-fun.js */ \"./node_modules/@cocreate/socket-client/src/common-fun.js\"), __webpack_require__(/*! ./utils.crud.js */ \"./node_modules/@cocreate/crud-client/src/utils.crud.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(commonFunc, utilsCrud) {\n        \treturn factory(window, commonFunc, utilsCrud)\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== 'undefined' ? self : this, function (wnd, commonFunc, utilsCrud) {\n  \n  const CoCreateCRUD = {\n    socket: null,\n    setSocket: function(socket) {\n      this.socket = socket;\n    },\n\n    readDocumentList(info){\n      if( !info ) return;\n      let request_data = commonFunc.getCommonParams();\n      if (!info.collection || !info.operator) {\n        return;\n      }\n      \n      request_data = {...request_data, ...info};\n      \n      this.socket.send('readDocumentList', request_data);\n    },\n    \n    createDocument: function(info) {\n      if (info === null) {\n        return;\n      }\n      let commonData = commonFunc.getCommonParamsExtend(info);\n      let request_data = {...info, ...commonData};\n  \n      let data = info.data || {};\n      \n      if (!data['organization_id']) {\n        data['organization_id'] = wnd.config.organization_Id\n      }\n      if (info['data']) {\n        data = {...data, ...info['data']}\n      }\n      \n      //. rebuild data\n      request_data['data'] = data;\n  \n      const room = commonFunc.generateSocketClient(info.namespace, info.room);\n      this.socket.send('createDocument', request_data, room);\n    },\n    \n    updateDocument: function(info) {\n      if (!info || !utilsCrud.checkDocumentId(info['document_id'])) return;\n      \n      let commonData = commonFunc.getCommonParamsExtend(info);\n      \n      let request_data = {...info, ...commonData};\n      \n      if( typeof info['data'] === 'object' ) {\n        request_data['set'] = info['data']\n      }\n      if( Array.isArray(info['delete_fields']) ) request_data['unset'] = info['delete_fields'];\n      \n      if(!request_data['set'] && !request_data['unset']) return;\n      \n      if (info.broadcast === false) {\n        request_data['broadcast'] = false;\n      }\n      \n      /** socket parameters **/\n      if (info['broadcast_sender'] === undefined) {\n        request_data['broadcast_sender'] = true;\n      }\n      \n      const room = commonFunc.generateSocketClient(info.namespace, info.room);\n      this.socket.send('updateDocument', request_data, room);\n    },\n    \n    readDocument: function(info) {\n      if (info === null) {\n        return;\n      }\n      \n      if (!info || !utilsCrud.checkDocumentId(info['document_id'])) {\n        return;\n      }\n      \n      let commonData = commonFunc.getCommonParamsExtend(info);\n      let request_data = {...info, ...commonData};\n      console.log(request_data)\n      this.socket.send('readDocument', request_data);\n    },\n    \n    \n    deleteDocument: function(info) {\n      if (!info || !utilsCrud.checkDocumentId(info['document_id'])) {\n        return;\n      }\n      \n      let commonData = commonFunc.getCommonParamsExtend(info);\n      let request_data = {...info, ...commonData};\n      \n      const room = commonFunc.generateSocketClient(info.namespace, info.room);\n      this.socket.send('deleteDocument', request_data, room);\n    },\n  \n  \n   /** export / import db functions **/\n    exportCollection: function(info) {\n      if (info === null) return;\n  \n      let request_data = commonFunc.getCommonParamsExtend(info);\n      request_data['collection'] = info['collection'];\n      request_data['export_type'] = info['export_type'];\n  \n      request_data['metadata'] = info['metadata']\n      this.socket.send('exportDB', request_data);\n    },\n    \n    importCollection: function(info) {\n      const {file} = info;\n      if (info === null || !(file instanceof wnd.File)) return;\n  \n      const extension = file.name.split(\".\").pop();\n      \n      if (!['json','csv'].some((item) => item === extension)) return;\n  \n      let request_data = commonFunc.getCommonParamsExtend(info)\n      request_data['collection'] = info['collection']\n      request_data['import_type'] = extension;\n      this.socket.send('importDB', request_data)\n      this.socket.sendFile(file);\n    },\n    \n    listen: function(message, fun) {\n      this.socket.listen(message, fun);\n    },\n    \n    listenAsync: function(eventname) {\n      return this.socket.listenAsync(eventname);\n    },\n  \n  \tcreateSocket: function(host, namespace) {\n  \t\tif (namespace) {\n  \t\t\tthis.socket.create({\n  \t\t\t\tnamespace: namespace, \n  \t\t\t\troom: null,\n  \t\t\t\thost: host\n  \t\t\t});\n  \t\t\tthis.socket.setGlobalScope(namespace);\n  \t\t} else {\n  \t\t\tthis.socket.create({\n  \t\t\t\tnamespace: null, \n  \t\t\t\troom: null,\n  \t\t\t\thost: host\n  \t\t\t});\n  \t\t}\n  \t},\n  \t\n  \t...utilsCrud\n  }\n  \n  return CoCreateCRUD;\n}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mdWxsY2FsZW5kYXIvLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL2NydWQtY2xpZW50L3NyYy9jcnVkLmpzP2M0MzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQVcsNkRBQTZEOztBQUV4RTtBQUNBLFFBQVEsSUFBMEM7QUFDbEQsUUFBUSxpQ0FBTyxDQUFDLGdJQUEyQyxFQUFFLG9HQUFpQixDQUFDLG1DQUFFO0FBQ2pGO0FBQ0EsU0FBUztBQUFBLGtHQUFDO0FBQ1YsS0FBSyxNQUFNLEVBVVI7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCOztBQUV0QjtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBOztBQUVBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLElBQUk7O0FBRUo7QUFDQTs7QUFFQTtBQUNBLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL2NydWQtY2xpZW50L3NyYy9jcnVkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHtnZXRDb21tb25QYXJhbXMsIGdldENvbW1vblBhcmFtc0V4dGVuZCwgZ2VuZXJhdGVTb2NrZXRDbGllbnR9IGZyb20gXCJAY29jcmVhdGUvc29ja2V0LWNsaWVudC9zcmMvY29tbW9uLWZ1bi5qc1wiXG5cbihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKFtcIkBjb2NyZWF0ZS9zb2NrZXQtY2xpZW50L3NyYy9jb21tb24tZnVuLmpzXCIsIFwiLi91dGlscy5jcnVkLmpzXCJdLCBmdW5jdGlvbihjb21tb25GdW5jLCB1dGlsc0NydWQpIHtcbiAgICAgICAgXHRyZXR1cm4gZmFjdG9yeSh3aW5kb3csIGNvbW1vbkZ1bmMsIHV0aWxzQ3J1ZClcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgbGV0IHduZCA9IHtcbiAgICAgICAgY29uZmlnOiB7fSxcbiAgICAgICAgRmlsZToge31cbiAgICAgIH1cbiAgICAgIGNvbnN0IGNvbW1vbkZ1bmMgPSByZXF1aXJlKFwiQGNvY3JlYXRlL3NvY2tldC1jbGllbnQvc3JjL2NvbW1vbi1mdW4uanNcIilcbiAgICAgIGNvbnN0IHV0aWxzID0gcmVxdWlyZShcIi4vdXRpbHMuY3J1ZC5qc1wiKVxuICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHduZCwgY29tbW9uRnVuYywgdXRpbHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb3QucmV0dXJuRXhwb3J0cyA9IGZhY3Rvcnkod2luZG93LCByb290W1wiQGNvY3JlYXRlL3NvY2tldC1jbGllbnQvc3JjL2NvbW1vbi1mdW4uanNcIl0sIHJvb3RbXCIuL3V0aWxzLmNydWQuanNcIl0pO1xuICB9XG59KHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbiAod25kLCBjb21tb25GdW5jLCB1dGlsc0NydWQpIHtcbiAgXG4gIGNvbnN0IENvQ3JlYXRlQ1JVRCA9IHtcbiAgICBzb2NrZXQ6IG51bGwsXG4gICAgc2V0U29ja2V0OiBmdW5jdGlvbihzb2NrZXQpIHtcbiAgICAgIHRoaXMuc29ja2V0ID0gc29ja2V0O1xuICAgIH0sXG5cbiAgICByZWFkRG9jdW1lbnRMaXN0KGluZm8pe1xuICAgICAgaWYoICFpbmZvICkgcmV0dXJuO1xuICAgICAgbGV0IHJlcXVlc3RfZGF0YSA9IGNvbW1vbkZ1bmMuZ2V0Q29tbW9uUGFyYW1zKCk7XG4gICAgICBpZiAoIWluZm8uY29sbGVjdGlvbiB8fCAhaW5mby5vcGVyYXRvcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJlcXVlc3RfZGF0YSA9IHsuLi5yZXF1ZXN0X2RhdGEsIC4uLmluZm99O1xuICAgICAgXG4gICAgICB0aGlzLnNvY2tldC5zZW5kKCdyZWFkRG9jdW1lbnRMaXN0JywgcmVxdWVzdF9kYXRhKTtcbiAgICB9LFxuICAgIFxuICAgIGNyZWF0ZURvY3VtZW50OiBmdW5jdGlvbihpbmZvKSB7XG4gICAgICBpZiAoaW5mbyA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgY29tbW9uRGF0YSA9IGNvbW1vbkZ1bmMuZ2V0Q29tbW9uUGFyYW1zRXh0ZW5kKGluZm8pO1xuICAgICAgbGV0IHJlcXVlc3RfZGF0YSA9IHsuLi5pbmZvLCAuLi5jb21tb25EYXRhfTtcbiAgXG4gICAgICBsZXQgZGF0YSA9IGluZm8uZGF0YSB8fCB7fTtcbiAgICAgIFxuICAgICAgaWYgKCFkYXRhWydvcmdhbml6YXRpb25faWQnXSkge1xuICAgICAgICBkYXRhWydvcmdhbml6YXRpb25faWQnXSA9IHduZC5jb25maWcub3JnYW5pemF0aW9uX0lkXG4gICAgICB9XG4gICAgICBpZiAoaW5mb1snZGF0YSddKSB7XG4gICAgICAgIGRhdGEgPSB7Li4uZGF0YSwgLi4uaW5mb1snZGF0YSddfVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLy4gcmVidWlsZCBkYXRhXG4gICAgICByZXF1ZXN0X2RhdGFbJ2RhdGEnXSA9IGRhdGE7XG4gIFxuICAgICAgY29uc3Qgcm9vbSA9IGNvbW1vbkZ1bmMuZ2VuZXJhdGVTb2NrZXRDbGllbnQoaW5mby5uYW1lc3BhY2UsIGluZm8ucm9vbSk7XG4gICAgICB0aGlzLnNvY2tldC5zZW5kKCdjcmVhdGVEb2N1bWVudCcsIHJlcXVlc3RfZGF0YSwgcm9vbSk7XG4gICAgfSxcbiAgICBcbiAgICB1cGRhdGVEb2N1bWVudDogZnVuY3Rpb24oaW5mbykge1xuICAgICAgaWYgKCFpbmZvIHx8ICF1dGlsc0NydWQuY2hlY2tEb2N1bWVudElkKGluZm9bJ2RvY3VtZW50X2lkJ10pKSByZXR1cm47XG4gICAgICBcbiAgICAgIGxldCBjb21tb25EYXRhID0gY29tbW9uRnVuYy5nZXRDb21tb25QYXJhbXNFeHRlbmQoaW5mbyk7XG4gICAgICBcbiAgICAgIGxldCByZXF1ZXN0X2RhdGEgPSB7Li4uaW5mbywgLi4uY29tbW9uRGF0YX07XG4gICAgICBcbiAgICAgIGlmKCB0eXBlb2YgaW5mb1snZGF0YSddID09PSAnb2JqZWN0JyApIHtcbiAgICAgICAgcmVxdWVzdF9kYXRhWydzZXQnXSA9IGluZm9bJ2RhdGEnXVxuICAgICAgfVxuICAgICAgaWYoIEFycmF5LmlzQXJyYXkoaW5mb1snZGVsZXRlX2ZpZWxkcyddKSApIHJlcXVlc3RfZGF0YVsndW5zZXQnXSA9IGluZm9bJ2RlbGV0ZV9maWVsZHMnXTtcbiAgICAgIFxuICAgICAgaWYoIXJlcXVlc3RfZGF0YVsnc2V0J10gJiYgIXJlcXVlc3RfZGF0YVsndW5zZXQnXSkgcmV0dXJuO1xuICAgICAgXG4gICAgICBpZiAoaW5mby5icm9hZGNhc3QgPT09IGZhbHNlKSB7XG4gICAgICAgIHJlcXVlc3RfZGF0YVsnYnJvYWRjYXN0J10gPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLyoqIHNvY2tldCBwYXJhbWV0ZXJzICoqL1xuICAgICAgaWYgKGluZm9bJ2Jyb2FkY2FzdF9zZW5kZXInXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJlcXVlc3RfZGF0YVsnYnJvYWRjYXN0X3NlbmRlciddID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3Qgcm9vbSA9IGNvbW1vbkZ1bmMuZ2VuZXJhdGVTb2NrZXRDbGllbnQoaW5mby5uYW1lc3BhY2UsIGluZm8ucm9vbSk7XG4gICAgICB0aGlzLnNvY2tldC5zZW5kKCd1cGRhdGVEb2N1bWVudCcsIHJlcXVlc3RfZGF0YSwgcm9vbSk7XG4gICAgfSxcbiAgICBcbiAgICByZWFkRG9jdW1lbnQ6IGZ1bmN0aW9uKGluZm8pIHtcbiAgICAgIGlmIChpbmZvID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKCFpbmZvIHx8ICF1dGlsc0NydWQuY2hlY2tEb2N1bWVudElkKGluZm9bJ2RvY3VtZW50X2lkJ10pKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgbGV0IGNvbW1vbkRhdGEgPSBjb21tb25GdW5jLmdldENvbW1vblBhcmFtc0V4dGVuZChpbmZvKTtcbiAgICAgIGxldCByZXF1ZXN0X2RhdGEgPSB7Li4uaW5mbywgLi4uY29tbW9uRGF0YX07XG4gICAgICBjb25zb2xlLmxvZyhyZXF1ZXN0X2RhdGEpXG4gICAgICB0aGlzLnNvY2tldC5zZW5kKCdyZWFkRG9jdW1lbnQnLCByZXF1ZXN0X2RhdGEpO1xuICAgIH0sXG4gICAgXG4gICAgXG4gICAgZGVsZXRlRG9jdW1lbnQ6IGZ1bmN0aW9uKGluZm8pIHtcbiAgICAgIGlmICghaW5mbyB8fCAhdXRpbHNDcnVkLmNoZWNrRG9jdW1lbnRJZChpbmZvWydkb2N1bWVudF9pZCddKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGxldCBjb21tb25EYXRhID0gY29tbW9uRnVuYy5nZXRDb21tb25QYXJhbXNFeHRlbmQoaW5mbyk7XG4gICAgICBsZXQgcmVxdWVzdF9kYXRhID0gey4uLmluZm8sIC4uLmNvbW1vbkRhdGF9O1xuICAgICAgXG4gICAgICBjb25zdCByb29tID0gY29tbW9uRnVuYy5nZW5lcmF0ZVNvY2tldENsaWVudChpbmZvLm5hbWVzcGFjZSwgaW5mby5yb29tKTtcbiAgICAgIHRoaXMuc29ja2V0LnNlbmQoJ2RlbGV0ZURvY3VtZW50JywgcmVxdWVzdF9kYXRhLCByb29tKTtcbiAgICB9LFxuICBcbiAgXG4gICAvKiogZXhwb3J0IC8gaW1wb3J0IGRiIGZ1bmN0aW9ucyAqKi9cbiAgICBleHBvcnRDb2xsZWN0aW9uOiBmdW5jdGlvbihpbmZvKSB7XG4gICAgICBpZiAoaW5mbyA9PT0gbnVsbCkgcmV0dXJuO1xuICBcbiAgICAgIGxldCByZXF1ZXN0X2RhdGEgPSBjb21tb25GdW5jLmdldENvbW1vblBhcmFtc0V4dGVuZChpbmZvKTtcbiAgICAgIHJlcXVlc3RfZGF0YVsnY29sbGVjdGlvbiddID0gaW5mb1snY29sbGVjdGlvbiddO1xuICAgICAgcmVxdWVzdF9kYXRhWydleHBvcnRfdHlwZSddID0gaW5mb1snZXhwb3J0X3R5cGUnXTtcbiAgXG4gICAgICByZXF1ZXN0X2RhdGFbJ21ldGFkYXRhJ10gPSBpbmZvWydtZXRhZGF0YSddXG4gICAgICB0aGlzLnNvY2tldC5zZW5kKCdleHBvcnREQicsIHJlcXVlc3RfZGF0YSk7XG4gICAgfSxcbiAgICBcbiAgICBpbXBvcnRDb2xsZWN0aW9uOiBmdW5jdGlvbihpbmZvKSB7XG4gICAgICBjb25zdCB7ZmlsZX0gPSBpbmZvO1xuICAgICAgaWYgKGluZm8gPT09IG51bGwgfHwgIShmaWxlIGluc3RhbmNlb2Ygd25kLkZpbGUpKSByZXR1cm47XG4gIFxuICAgICAgY29uc3QgZXh0ZW5zaW9uID0gZmlsZS5uYW1lLnNwbGl0KFwiLlwiKS5wb3AoKTtcbiAgICAgIFxuICAgICAgaWYgKCFbJ2pzb24nLCdjc3YnXS5zb21lKChpdGVtKSA9PiBpdGVtID09PSBleHRlbnNpb24pKSByZXR1cm47XG4gIFxuICAgICAgbGV0IHJlcXVlc3RfZGF0YSA9IGNvbW1vbkZ1bmMuZ2V0Q29tbW9uUGFyYW1zRXh0ZW5kKGluZm8pXG4gICAgICByZXF1ZXN0X2RhdGFbJ2NvbGxlY3Rpb24nXSA9IGluZm9bJ2NvbGxlY3Rpb24nXVxuICAgICAgcmVxdWVzdF9kYXRhWydpbXBvcnRfdHlwZSddID0gZXh0ZW5zaW9uO1xuICAgICAgdGhpcy5zb2NrZXQuc2VuZCgnaW1wb3J0REInLCByZXF1ZXN0X2RhdGEpXG4gICAgICB0aGlzLnNvY2tldC5zZW5kRmlsZShmaWxlKTtcbiAgICB9LFxuICAgIFxuICAgIGxpc3RlbjogZnVuY3Rpb24obWVzc2FnZSwgZnVuKSB7XG4gICAgICB0aGlzLnNvY2tldC5saXN0ZW4obWVzc2FnZSwgZnVuKTtcbiAgICB9LFxuICAgIFxuICAgIGxpc3RlbkFzeW5jOiBmdW5jdGlvbihldmVudG5hbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnNvY2tldC5saXN0ZW5Bc3luYyhldmVudG5hbWUpO1xuICAgIH0sXG4gIFxuICBcdGNyZWF0ZVNvY2tldDogZnVuY3Rpb24oaG9zdCwgbmFtZXNwYWNlKSB7XG4gIFx0XHRpZiAobmFtZXNwYWNlKSB7XG4gIFx0XHRcdHRoaXMuc29ja2V0LmNyZWF0ZSh7XG4gIFx0XHRcdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2UsIFxuICBcdFx0XHRcdHJvb206IG51bGwsXG4gIFx0XHRcdFx0aG9zdDogaG9zdFxuICBcdFx0XHR9KTtcbiAgXHRcdFx0dGhpcy5zb2NrZXQuc2V0R2xvYmFsU2NvcGUobmFtZXNwYWNlKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHRoaXMuc29ja2V0LmNyZWF0ZSh7XG4gIFx0XHRcdFx0bmFtZXNwYWNlOiBudWxsLCBcbiAgXHRcdFx0XHRyb29tOiBudWxsLFxuICBcdFx0XHRcdGhvc3Q6IGhvc3RcbiAgXHRcdFx0fSk7XG4gIFx0XHR9XG4gIFx0fSxcbiAgXHRcbiAgXHQuLi51dGlsc0NydWRcbiAgfVxuICBcbiAgcmV0dXJuIENvQ3JlYXRlQ1JVRDtcbn0pKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/crud-client/src/crud.js\n")},"./node_modules/@cocreate/crud-client/src/index.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! @cocreate/socket-client */ \"./node_modules/@cocreate/socket-client/src/index.js\"), __webpack_require__(/*! ./crud.js */ \"./node_modules/@cocreate/crud-client/src/crud.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(CoCreateSocket, CoCreateCRUD) {\n        \treturn factory(true, CoCreateSocket, CoCreateCRUD)\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== 'undefined' ? self : this, function (isBrowser, CoCreateSocket, CoCreateCRUD) {\n  if (isBrowser) {\n    let crud_socket = new CoCreateSocket('ws');\n    CoCreateCRUD.setSocket(crud_socket);\n    CoCreateCRUD.createSocket(window.config.host ? window.config.host : window.location.hostname, window.config.organization_Id)\n  } \n  return CoCreateCRUD;\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mdWxsY2FsZW5kYXIvLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL2NydWQtY2xpZW50L3NyYy9pbmRleC5qcz81ZWJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsUUFBUSxJQUEwQztBQUNsRCxRQUFRLGlDQUFPLENBQUMseUdBQXlCLEVBQUUsd0ZBQVcsQ0FBQyxtQ0FBRTtBQUN6RDtBQUNBLFNBQVM7QUFBQSxrR0FBQztBQUNWLEtBQUssTUFBTSxFQVVSO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRztBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AY29jcmVhdGUvY3J1ZC1jbGllbnQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgICBkZWZpbmUoW1wiQGNvY3JlYXRlL3NvY2tldC1jbGllbnRcIiwgXCIuL2NydWQuanNcIl0sIGZ1bmN0aW9uKENvQ3JlYXRlU29ja2V0LCBDb0NyZWF0ZUNSVUQpIHtcbiAgICAgICAgXHRyZXR1cm4gZmFjdG9yeSh0cnVlLCBDb0NyZWF0ZVNvY2tldCwgQ29DcmVhdGVDUlVEKVxuICAgICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICBsZXQgd25kID0ge1xuICAgICAgICBjb25maWc6IHt9LFxuICAgICAgICBGaWxlOiB7fVxuICAgICAgfVxuICAgICAgY29uc3QgQ29DcmVhdGVDUlVEID0gcmVxdWlyZShcIi4vY3J1ZC5qc1wiKVxuICAgICAgY29uc3QgQ29DcmVhdGVTb2NrZXQgPSByZXF1aXJlKFwiQGNvY3JlYXRlL3NvY2tldC1jbGllbnRcIilcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShmYWxzZSwgQ29DcmVhdGVTb2NrZXQsIENvQ3JlYXRlQ1JVRCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcm9vdC5yZXR1cm5FeHBvcnRzID0gZmFjdG9yeSh0cnVlLCByb290W1wiQGNvY3JlYXRlL3NvY2tldC1jbGllbnRcIl0sIHJvb3RbXCIuL2NydWQuanNcIl0pO1xuICB9XG59KHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbiAoaXNCcm93c2VyLCBDb0NyZWF0ZVNvY2tldCwgQ29DcmVhdGVDUlVEKSB7XG4gIGlmIChpc0Jyb3dzZXIpIHtcbiAgICBsZXQgY3J1ZF9zb2NrZXQgPSBuZXcgQ29DcmVhdGVTb2NrZXQoJ3dzJyk7XG4gICAgQ29DcmVhdGVDUlVELnNldFNvY2tldChjcnVkX3NvY2tldCk7XG4gICAgQ29DcmVhdGVDUlVELmNyZWF0ZVNvY2tldCh3aW5kb3cuY29uZmlnLmhvc3QgPyB3aW5kb3cuY29uZmlnLmhvc3QgOiB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsIHdpbmRvdy5jb25maWcub3JnYW5pemF0aW9uX0lkKVxuICB9IFxuICByZXR1cm4gQ29DcmVhdGVDUlVEO1xufSkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/crud-client/src/index.js\n")},"./node_modules/@cocreate/crud-client/src/utils.crud.js":function(module,exports){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n        \treturn factory()\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== 'undefined' ? self : this, function () {\n  \n  function \t__mergeObject(target, source) \n  {\n  \ttarget = target || {};\n  \tfor (let key of Object.keys(source)) {\n  \t\tif (source[key] instanceof Object) {\n  \t\t\tObject.assign(source[key], __mergeObject(target[key], source[key]))\n  \t\t}\n  \t}\n  \t\n  \tObject.assign(target || {}, source)\n  \treturn target\n  }\n  \n  function __createObject(data, path) \n  {\n  \tif (!path) return data;\n  \t\n  \tlet keys = path.split('.')\n  \tlet newObject = data;\n  \n  \tfor (var  i = keys.length - 1; i >= 0; i--) {\n  \t\tnewObject = {[keys[i]]: newObject}\t\t\t\t\n  \t}\n  \treturn newObject;\n  }\n  \n  function __createArray(key, data)\n  {\n    try {\n      let item = /([\\w\\W]+)\\[(\\d+)\\]/gm.exec(key)\n      if (item && item.length == 3) {\n        let arrayKey = item[1];\n        let index = parseInt(item[2]);\n        \n        if (!data[arrayKey] || !Array.isArray(data[arrayKey])) {\n          data[arrayKey] = [];\n        } \n        data[arrayKey][index] = data[key];\n        delete data[key];\n        key = arrayKey;\n      }\n    } catch {\n      console.log('create array error');\n    }\n    return key;\n  }\n  \n  function isObject(item) {\n    return (!!item) && (item.constructor === Object);\n  }\n  function isArray(item) {\n    return (!!item) && (item.constructor === Array);\n  }\n  \n  function decodeObject(data) {\n    let keys = Object.keys(data)\n    let objectData = {};\n    \n    keys.forEach((k) => {\n      k = __createArray(k, data);\n      if (k.split('.').length > 1) {\n        let newData = __createObject(data[k], k);\n        delete data[k];\n        \n        objectData = __mergeObject(objectData, newData);\n      } else {\n        objectData[k] = data[k];\n      }\n    })\n    return objectData;\n  }\n  \n  function encodeObject(data) {\n    let keys = Object.keys(data);\n    let newData = {};\n    keys.forEach((k) => {\n      let data_value = data[k];\n      if (isObject(data[k])) {\n        let new_obj = encodeObject(data[k]);\n        \n        let newKeys = Object.keys(new_obj);\n        newKeys.forEach((newKey) => {\n          let value = new_obj[newKey];\n          newKey = k + \".\" + newKey;\n          newData[newKey] = value;\n        })\n        \n      } else if (isArray(data_value)){\n        data_value.forEach((v, index) => {\n          newData[`${k}[${index}]`] = v;\n        })\n      } else {\n        newData[k] = data[k];\n      }\n    })\n    return newData;\n  }\n  \n  function getAttr(el) {\n    if (!el) return\n  \n    let collection = el.getAttribute('data-collection')\n    let document_id = el.getAttribute('data-document_id')\n    let name = el.getAttribute('name')\n    return { collection, document_id, name }\n  }\n  \n  function getFlagAttr(el) {\n    if (!el) return {}\n    let is_realtime = isRealtimeAttr(el);\n    let is_save = isSaveAttr(el);\n    let is_read = isReadAttr(el);\n    let is_update = isUpdateAttr(el);\n    return { is_realtime, is_save, is_read, is_update }\n  }\n  \n  const isReadAttr = (el) => ( __isValueOfAttr(el, 'data-read_value'));\n  const isSaveAttr = (el) => ( __isValueOfAttr(el, 'data-save_value'));\n  const isUpdateAttr = (el) => ( __isValueOfAttr(el, 'data-update_value'));\n  // const isRealtimeAttr = (el) => ( __isValueOfAttr(el, 'data-realtime'));\n  const isRealtimeAttr = (el) => {\n    if (!el) return false\n    let flag = el.getAttribute('data-realtime') == \"false\" ? false : true;\n    return flag\n  };\n  \n  function __isValueOfAttr(el, attr) {\n    if (!el) return false;\n    let flag = el.getAttribute(attr) === \"false\" ? false : true;\n    return flag\n  }\n  \n  function checkValue(value) {\n    if (!value) return false;\n    if (/{{\\s*([\\w\\W]+)\\s*}}/g.test(value)) {\n      return false;\n    }\n  \n    return true;\n  }\n  \n  function isJsonString(str_data) {\n    try {\n      let json_data = JSON.parse(str_data);\n      if (typeof json_data === \"object\" && json_data != null) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n    catch (e) {\n      return false;\n    }\n  }\n  \n  function isCRDT(input) {\n    const { collection, document_id, name } = getAttr(input)\n    \n    if (isJsonString(collection)) return false;\n    if (isJsonString(name)) return false;\n  \n    if ((input.tagName === \"INPUT\" && [\"text\", \"email\", \"tel\", \"url\"].includes(input.type)) || input.tagName === \"TEXTAREA\") {\n      \n      if (!name) return false;\n      if (!isRealtimeAttr(input)) return false;\n      if (input.getAttribute(\"data-unique\") === \"true\") return false;\n      if (input.type === 'password') return false;\n      if (!isReadAttr(input)) return false;\n      return true;\n      \n    }\n    return false;\n  }\n  \n  function checkDocumentId(document_id) {\n    try {\n      if (!document_id) return false;\n      if (document_id.toLowerCase() === \"null\") return false;\n      return true;\n    } catch(error) {\n      return false;\n    }\n  }\n  \n  \n  return {\n    decodeObject,\n    encodeObject,\n    getAttr,\n    getFlagAttr,\n    isRealtimeAttr,\n    isReadAttr,\n    isSaveAttr,\n    isUpdateAttr,\n    checkValue,\n    isCRDT,\n    checkDocumentId\n  }\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/crud-client/src/utils.crud.js\n")},"./node_modules/@cocreate/filter/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cocreate_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cocreate/utils */ \"./node_modules/@cocreate/utils/src/index.js\");\n/* harmony import */ var _cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cocreate/crud-client */ \"./node_modules/@cocreate/crud-client/src/index.js\");\n/* harmony import */ var _cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst CoCreateFilter = {\n\titems: [],\n\tioInstance: null,\n\tmoduleAttribues: [],\n\t\n\tmodule_items : [],\n\t\n\t/** start init processing **/\n\t__init: function() {\n\t\tthis.__initIntesection()\n\t\tthis.__initSocket()\n\t\tthis.__initEvents()\n\t},\n\t\n\t__initIntesection: function() {\n\t\tconst self = this;\n\t\tthis.ioInstance = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach(entry => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tconst attributeInfo = self.__getMainAttribue(entry.target);\n\t\t\t\t\tif (attributeInfo.id) {\n\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent('CoCreateFilter-loadMore', {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\tattrName: attributeInfo.name,\n\t\t\t\t\t\t\t\tattrId: attributeInfo.id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tself.ioInstance.unobserve(entry.target)\n\t\t\t\t}\n\t\t\t})\n\t\t}, {\n\t\t\tthreshold: 1\n\t\t})\t\n\t},\n\t\n\t__runLoadMore: function(attrName, id) {\n\t\tif (!id || !attrName) return;\n\t\tlet item = this.items.find((item) => item.attrName === attrName && item.id === id)\n\t\tif (!item) return;\n\t\t\n\t\tif (item.count > 0) {\n\t\t\tthis.fetchData(item)\n\t\t}\n\t},\n\t\n\t__getMainAttribue: function(el) {\n\t\tconst attribute = this.moduleAttribues.find((attr) => (el.getAttribute(attr) || \"\") !== \"\" )\n\t\tif (attribute) {\n\t\t\treturn {\n\t\t\t\tname : attribute,\n\t\t\t\tid: el.getAttribute(attribute)\n\t\t\t}\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t},\n\t\n\t__initSocket: function() {\n\t\tconst self = this;\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default().listen('readDocumentList', function(data) {\n\t\t\tlet item_id = data['element'];\n\t\t\tlet item = self.items.find((item) => item.id === item_id);\n\t\t\tif (item) {\n\t\t\t\t// eObj.startIndex += data.result.length;\n\t\t\t\tconst result_data = data['data'];\n\t\t\t\t\n\t\t\t\t//. set the intersection observe element\n\t\t\t\tlet element = document.querySelector(`[${item.attrName}=\"${item.id}\"][data-fetch_type=\"scroll\"]`)\n\t\t\t\tif (result_data.length > 0 && element) {\n\t\t\t\t\tself.ioInstance.observe(element)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// /** render total count **/\n\t\t\t\tconst totalCount = data['operator'].total\n\t\t\t\tconst totalElements = document.querySelectorAll(`[${item.attrName}=\"${item.id}\"][data-fetch_type=\"total\"]`)\n\t\t\t\t\n\t\t\t\tif (totalElements) {\n\t\t\t\t\ttotalElements.forEach((el) => el.innerHTML = totalCount)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\t\n\t__initEvents: function() {\n\t\tconst self = this;\n\t\tdocument.addEventListener('CoCreateFilter-loadMore', function(event) {\n\t\t\tconst attrId = event.detail.attrId;\n\t\t\tconst attrName = event.detail.attrName\n\t\t\tself.__runLoadMore(attrName, attrId)\n\t\t})\n\t\t\n\t\tlet buttons = document.querySelectorAll('[data-fetch_type=\"loadmore\"]');\n\t\tbuttons.forEach((btn) => {\n\t\t\tbtn.addEventListener('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst attributeInfo = self.__getMainAttribue(btn);\n\n\t\t\t\tif (!attributeInfo.id) return;\n\t\t\t\tself.__runLoadMore(attributeInfo.attrName, attributeInfo.attrId)\n\t\t\t})\n\t\t});\n\t},\n\t\n\t/** ---  End --- **/\n\t\n\tsetFilter: function(el, mainAttr, type) {\n\t\t\t\n\t\tif (!mainAttr) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlet id = el.getAttribute(mainAttr);\n\t\t\n\t\tif (!id) return;\n\t\t\n\t\tif (!this.moduleAttribues.includes(mainAttr)) this.moduleAttribues.push(mainAttr)\n\t\t\n\t\tlet collection = el.getAttribute('data-fetch_collection');\n\t\tlet fetch_type = el.getAttribute('data-fetch_value_type')\n\t\tlet fetch_collection = fetch_type == \"collection\" ? true : false;\n\t\t\n\t\tlet order_name = el.getAttribute('data-order_by')\n\t\tlet order_type = el.getAttribute('data-order_type') || 'asc';\n\n\t\tlet fetch_count = parseInt(el.getAttribute('data-fetch_count'));\n\t\t\n\t\tlet item = {\n\t\t\tel: el,\n\t\t\tid: id,\n\t\t\teId: id, // + this.items.length,\n\t\t\ttype: type,\n\t\t\t\n\t\t\tattrName: mainAttr,\n\t\t\t\n\t\t\tcollection: collection,\n\t\t\tstartIndex: 0,\n\t\t\toptions: {},\t/** return options **/\n\t\t\tfetch: {},\n\t\t\tis_collection: fetch_collection,\n\t\t\tsearch: {\n\t\t\t\ttype: 'or',\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\torders: [],\n\t\t\tfilters: []\n\t\t}\n\t\t\n\t\tif (!isNaN(fetch_count) && fetch_count > 0) {\n\t\t\titem.count = fetch_count;\n\t\t}\n\t\n\t\tif (order_name) {\n\t\t\titem.orders.push({name: order_name, type: order_type == 'asc' ? 1 : -1 })\n\t\t}\n\n\t\tthis._initFilter(item, id, mainAttr);\n\t\tthis._initOrder(item, id, mainAttr);\n\t\tthis.items.push(item);\n\t\tthis._initInputForm(item, mainAttr);\n\t\t\n\t\tthis._initExportImport(item, id, mainAttr);\n\t\treturn item;\n\t},\n\t\n\t_initFilter: function(item, id, attrName) {\n\t\tlet filter_objs = item.el.getRootNode().querySelectorAll('[' + attrName + '=\"' + id + '\"]');\n\t\tfor (var i = 0; i < filter_objs.length; i++) {\n\t\t\t\n\t\t\tlet f_el = filter_objs[i];\n\t\t\tlet filter_name = f_el.getAttribute('data-filter_name');\n\t\t\tlet filter_operator = f_el.getAttribute('data-filter_operator') ? f_el.getAttribute('data-filter_operator') : '$contain';\n\t\t\tlet value_type = f_el.getAttribute('data-filter_value_type') ? f_el.getAttribute('data-filter_value_type') : 'string';\n\t\t\tlet filter_type = f_el.getAttribute('data-filter_type');\n\t\t\tlet filter_value = f_el.getAttribute('data-filter_value');\n\t\t\tif (filter_value == null) {\n\t\t\t\tcontinue ;\n\t\t\t}\n\t\t\tif (value_type !== \"raw\") {\n\t\t\t\tfilter_value = filter_value.replace(/\\s/g, '').split(',');\n\t\t\t}\n\t\n\t\t\tif (!filter_name) {\n\t\t\t\titem.search.value = this._makeSearchOption(id, attrName);\n\t\t\t} else {\n\t\t\t\tlet idx = this.getFilterByName(item, filter_name, filter_operator);\n\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\tfor (let i = 0; i < filter_value.length; i++) {\n\t\t\t\t\t\tfilter_value[i] = Number(filter_value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.insertArrayObject(item.filters, idx, {name: filter_name, value: filter_value, operator: filter_operator, type: filter_type})\n\t\t\t}\n\t\t}\n\t},\n\t\n\t_initOrder: function(item, id, attrName) {\n\t\tlet filter_objs = item.el.getRootNode().querySelectorAll('[' + attrName + '=\"' + id + '\"]');\n\t\tconst _this = this;\n\t\tfor (var i = 0; i < filter_objs.length; i++) {\n\t\t\t\n\t\t\tlet f_el = filter_objs[i];\n\t\t\tlet order_name = f_el.getAttribute('data-order_by');\n\t\t\tlet order_value = f_el.getAttribute('value');\n\t\t\tif (!order_name || !order_value) {\n\t\t\t\tcontinue ;\n\t\t\t}\n\t\t\t\n\t\t\tif (['A', 'BUTTON'].includes(f_el.tagName)) {\n\t\t\t\tf_el.addEventListener('click', function(){\n\t\t\t\t\tlet name = this.getAttribute('data-order_by');\n\t\t\t\t\tlet value = this.getAttribute('value');\n\t\t\t\t\t_this._applyOrder(item, name, value)\n\t\t\t\t\tif (item.el) {\n\t\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//. apply click event\n\t\t\t} else {\n\t\t\t\tthis._applyOrder(item, order_name, order_value);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._initToggleOrderEvent(item, id, attrName);\n\t},\n\t\n\t_initToggleOrderEvent: function(item, id, attrName) {\n\t\tlet elements = document.querySelectorAll(`[${attrName}=\"${id}\"][data-toggle_order]`)\n\t\tconst self =this;\n\t\telements.forEach((element) => {\n\t\t\telement.addEventListener('click', function() {\n\t\t\t\tlet value = this.getAttribute('data-toggle_order') || '';\n\t\t\t\tlet order_name = this.getAttribute('data-order_by');\n\t\t\t\t\n\t\t\t\tvalue = value === 'asc' ? 'desc' : 'asc';\n\n\t\t\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\t\t\tif (elements[i] !== element) {\n\t\t\t\t\t\telements[i].setAttribute('data-toggle_order', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\titem.orders = [];\n\t\t\t\t\n\t\t\t\tself._applyOrder(item, order_name, value);\n\t\t\t\telement.setAttribute('data-toggle_order', value);\n\t\t\t\t\n\t\t\t\tif (item.el) {\n\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t})\n\t},\n\t\n\t_initExportImport: function(item, id, attrName) {\n\t\tlet export_button = document.querySelector(`[data-export_type][${attrName}=\"${id}\"]`);\n\t\tlet import_button = document.querySelector(`[data-import=\"true\"][${attrName}=\"${id}\"]`);\n\t\t\n\t\tconst self = this;\n\t\tif (export_button) {\n\t\t\t//. export_buttons action\n\t\t\texport_button.addEventListener('click', function() {\n\t\n\t\t\t\tif (!item) return;\n\t\t\t\t\n\t\t\t\tlet new_filter = self.makeFetchOptions(item)\n\t\t\t\t\n\t\t\t\tnew_filter.export = {\n\t\t\t\t\tcollection: new_filter.collection,\n\t\t\t\t\ttype: export_button.getAttribute('data-export_type') || 'json'\n\t\t\t\t}\n\t\t\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default().readDocumentList(new_filter);\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\tif (import_button) {\n\t\t\t//. import button action\n\t\t\timport_button.addEventListener('click', function() {\n\t\t\t\tvar input = document.createElement('input');\n\t\t\t\tinput.type = 'file';\n\t\n\t\t\t\tif (!item) return;\n\t\t\t\t\n\t\t\t\tlet collection = item.collection;\n\t\t\t\t\n\t\t\t\t//. or \n\t\t\t\t// collection = btn.getAttribute('data-collection');\n\t\n\t\t\t\tinput.onchange = e => {\n\t\t\t\t\tvar file = e.target.files[0];\n\t\t\t\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default().importCollection({\n\t\t\t\t\t\tcollection: collection,\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tinput.click();\n\t\t\t})\n\t\t}\n\n\t},\n\t\n\t_applyOrder: function(item, name, value) {\n\t\t\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\t\tlet order_type = 0;\n\t\tlet idx = this.getOrderByName(item, name);\n\t\t\n\t\tif (value == 'asc') {\n\t\t\torder_type = 1;   \n\t\t} else if (value == 'desc') {\n\t\t\torder_type = -1;\n\t\t} else {\n\t\t\torder_type = [];\n\t\t}\n\t\tthis.insertArrayObject(item.orders, idx, {name: name, type: order_type}, order_type)\n\t},\n\t\n\tchangeCollection: function(filter) {\n\t\tlet collection = filter.el.getAttribute('data-fetch_collection');\n\t\tfilter.collection = collection;\n\t\tfilter.startIndex = 0;\n\t},\n\t\n\t_makeSearchOption: function(id, attrName) {\n\t\tlet forms = document.querySelectorAll('form[' + attrName + '=' + id + ']');\n\t\t\n\t\tlet tmpSelector = '[' + attrName + '=' + id + ']';\n\t\tlet otherInputs = document.querySelectorAll('input' + tmpSelector + ',textarea' + tmpSelector + ', select' + tmpSelector);\n\t\t\n\t\tlet template_inputs = [];\n\n\t\tfor (let i=0; i < forms.length; i++) {\n\t\t\tlet form = forms[i];\n\t\t\tlet formInputs = form.querySelectorAll('input, textarea, select');\n\t\t\tformInputs = Array.prototype.slice.call(formInputs)\n\t\t\ttemplate_inputs = template_inputs.concat(formInputs);\n\t\t}\n\t\t\n\t\totherInputs = Array.prototype.slice.call(otherInputs);\n\t\ttemplate_inputs = template_inputs.concat(otherInputs)\n\t\t\n\t\tlet values = [];\n\t\t\n\t\tfor (var i = 0; i < template_inputs.length; i++) {\n\t\t\tlet filter_name = template_inputs[i].getAttribute('data-filter_name')\n\t\t\tlet order_name = template_inputs[i].getAttribute('data-order_by')\n\t\t\t\n\t\t\tlet input = template_inputs[i];\n\t\t\tlet value_type = input.getAttribute('data-value_type') ? input.getAttribute('data-value_type') : 'string';\n\t\t\tlet value = null;\n\t\t\t\n\t\t\tif (!filter_name && !order_name) {\n\t\t\t\tif (input.type == 'checkbox' && !input.checked) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = input.value;\n\t\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\t\tvalue = Number(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (value && !values.includes(value)) {\n\t\t\t\t\t\tvalues.push(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t},\n\t\n\t_initInputForm: function(item, attrName) {\n\t\n\t\tif (!item) return;\n\t\n\t\tlet tmpSelector = '[' + attrName + '=\"' + item.id + '\"]';\n\t\tlet formInputs = item.el.getRootNode().querySelectorAll('form'+ tmpSelector + ' input, form' + tmpSelector + ' textarea, form' + tmpSelector + ' select');\n\t\tlet otherInputs = item.el.getRootNode().querySelectorAll('input' + tmpSelector + ',textarea' + tmpSelector + ', select' + tmpSelector);\n\t\n\t\tthis.setCheckboxName(item.id, attrName);\n\t\t\n\t\tformInputs = Array.prototype.slice.call(formInputs);\n\t\totherInputs = Array.prototype.slice.call(otherInputs);\n\t\tformInputs = formInputs.concat(otherInputs);\n\n\t\t// console.log('input form', tmpSelector);\n\t\t\n\t\tfor (let i=0; i < formInputs.length; i++) {\n\t\t\tlet input = formInputs[i];\n\t\t\t\n\t\t\tlet order_by = input.getAttribute('data-order_by');\n\t\t\t\n\t\t\tif (order_by) {\n\t\t\t\tthis._initOrderInput(item, input);\n\t\t\t} else {\n\t\t\t\tthis._initFilterInput(item, input, item.id);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t_initOrderInput: function(item, input) {\n\t\tvar _instance = this;\n\t\tinput.addEventListener('change', function(e) {\n\t\t\t\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tlet order_by = this.getAttribute('data-order_by');\n\t\t\tlet order_type = 0;\n\t\t\tlet idx = _instance.getOrderByName(item, order_by);\n\t\t\t\n\t\t\tif (this.value == 'asc') {\n\t\t\t\torder_type = 1;   \n\t\t\t} else if (this.value == 'desc') {\n\t\t\t\torder_type = -1;\n\t\t\t} else {\n\t\t\t\torder_type = [];\n\t\t\t}\n\t\t\t\n\t\t\t_instance.insertArrayObject(item.orders, idx, {name: order_by, type: order_type}, order_type)\n\t\t\t\n\t\t\tif (item.el) {\n\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t}\n\t\t})\n\t},\n\n\t_initFilterInput: function (item, input, id) {\n\t\tvar _instance = this;\n\t\tvar delayTimer;\n\t\tinput.addEventListener('input', function(e) {\n\t\t\te.preventDefault();\n\t\t\tlet filter_name = this.getAttribute('data-filter_name');\n\t\t\tlet filter_operator = this.getAttribute('data-filter_operator') || '$contain';\n\t\t\tlet filter_type = this.getAttribute('data-filter_type');\n\t\t\tlet value_type = this.getAttribute('data-filter_value_type') || 'string';\n\t\t\tclearTimeout(delayTimer);\n\t\t\tdelayTimer = setTimeout(function() {\n\t\t\t\t\n\t\t\t\tif (!filter_name) {\n\t\t\t\t\titem.search.value = _instance._makeSearchOption(id, item.attrName);\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tlet idx = _instance.getFilterByName(item, filter_name, filter_operator);\n\t\t\t\n\t\t\t\t\tlet inputType = input.type;\n\t\t\t\t\tlet filterValue = [];\n\t\t\t\t\n\t\t\t\t\tif (inputType == 'checkbox') {\n\t\t\t\t\t\tvar inputGroup = document.querySelectorAll(\"input[name=\" + input.name + \"]:checked\");\n\t\t\t\t\t\tfor (var i = 0; i < inputGroup.length; i++) {\n\t\t\t\t\t\t\tfilterValue.push(inputGroup[i].value);\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t} else if (inputType == 'raido') {\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (inputType == 'range') {\n\t\t\t\t\t\tfilterValue = [Number(input.min), Number(input.value)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar value = input.value;\n\t\t\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\t\t\tvalue = Number(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value != \"none\") {\n\t\t\t\t\t\t\tfilterValue = [value];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (value_type === \"raw\") {\n\t\t\t\t\t\t\tfilterValue = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t_instance.insertArrayObject(item.filters, idx, {name: filter_name, value: filterValue, operator: filter_operator, type: filter_type})\n\t\t\t\t}\n\t\t\t\tif (item.el) {\n\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'filter'} }))\n\t\t\t\t}\n\t\t\t\n\t\t\t}, 500);\n\n\t\t})\n\t},\n\tsetCheckboxName: function (id, attrName) {\n\t\tvar forms = document.querySelectorAll('form[' + attrName + '=\"' + id + '\"]')\n\t\tfor (var k = 0; k < forms.length; k++) {\n\t\t\t\n\t\t\tvar elements = forms[k].querySelectorAll('input[type=checkbox], form input[type=radio]');\n\t\t\t\n\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\tvar el_name = elements[i].getAttribute('name');\n\t\t\t\tvar f_name = elements[i].getAttribute('data-filter_name');\n\t\t\t\tif (el_name || !f_name) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telements[i].setAttribute('name', \"_\" + id +\"-\" + f_name + \"_\" + k);\n\t\t\t}\n\t\t\t\n\t\t}\n\t},\n\t\n\tgetFilterByName: function (item, filterName, filterOperator) {\n\t\tfor (var i = 0; i < item.filters.length; i++) {\n\t\t\tvar f = item.filters[i];\n\t\t\tif (f.name == filterName && f.operator == filterOperator) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\t\n\tinsertArrayObject: function(data, idx, obj, value) {\n\t\tif (!value) {\n\t\t\tvalue = obj.value;\n\t\t}\n\t\tif (typeof value == 'object'  && value.length == 0) {\n\t\t\tif (idx != -1) {\n\t\t\t\tdata.splice(idx, 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (idx != -1) {\n\t\t\t\tdata[idx] = obj;\n\t\t\t} else {\n\t\t\t\tdata.push(obj);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn data;\n\t},\n\t\n\tgetOrderByName: function(item, name) {\n\t\tfor (var i = 0; i < item.orders.length; i++) {\n\t\t\tif (item.orders[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\t\n\t\n\tdefineEvent: function(item) {\n\t\titem.el.addEventListener('fetchFilterData', function(event) {\n\t\t\tconsole.log(event);\n\t\t});\n\t},\n\t\n\tfetchData:function (item) {\n\t\tlet json = this.makeFetchOptions(item);\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default().readDocumentList(json);\n\t},\n\t\n\tgetObjectByFilterId: function(obj, id) {\n\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\tlet filter = obj[i].filter;\n\t\t\tif (!filter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (filter.id == id) {\n\t\t\t\treturn obj[i];\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetObjectByElement: function(obj, el) {\n\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\tlet filter = obj[i].filter;\n\t\t\tif (!filter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (filter.el.isSameNode(el)) {\n\t\t\t\treturn obj[i];\n\t\t\t}\n\t\t}\n\t},\n\t\n\tmakeFetchOptions: function(item) {\n\t\tlet json = {\n\t\t\t\"collection\": item.collection,\n\t\t\t\"element\": item.eId,\n\t\t\t\"metadata\": {\n\t\t\t\tisRefresh: item.isRefresh\n\t\t\t},\n\t\t\t\"operator\" :  {\n\t\t\t\t\"filters\": item.filters,\n\t\t\t\t\"orders\": item.orders,\n\t\t\t\t\"search\": item.search,\n\t\t\t\t\"startIndex\": item.startIndex,\n\t\t\t},\n\t\t\t\"is_collection\": item.is_collection\n\t\t}\n\t\t\n\t\tif (item.count) {\n\t\t\tjson['operator'].count = item.count;\n\t\t}\n\t\treturn json;\n\t},\n\t\n\tinit: function({name, attribute, callback}) {\n\t\tlet elements = document.querySelectorAll(`[data-fetch_collection][${attribute}]`)\n\t\tconst self = this;\n\t\telements.forEach((el) => {\n\t\t\tself.__initFilterElement(el, attribute, name);\n\t\t});\n\t\t\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_1___default().listen('readDocumentList', function(data) {\n\t\t\tcallback.call(null, data);\n\t\t})\n\t},\n\t\n\t__initFilterElement: function(el, attribute, name) {\n\t\tlet _id = el.getAttribute(attribute)\n\t\tconst self = this;\n\t\tif (!_id) return;\n\t\t\n\t\t//. restrict the duplication define\n\t\t// if (this.module_items.some(x => x.name == name && x.id == _id)) {\n\t\t// \treturn;\n\t\t// }\n\t\t\n\t\tlet filter = this.setFilter(el, attribute, name)\n\t\t\n\t\tif (filter) {\n\t\t\tthis.module_items.push({\n\t\t\t\tel: el,\n\t\t\t\tfilter: filter,\n\t\t\t\tid: _id,\n\t\t\t\tname: name\n\t\t\t})\n\t\t\t\n\t\t\tel.addEventListener('changeFilterInput', function(e) {\n\t\t\t\tself.fetchData(filter)\n\t\t\t})\n\t\t\t\n\t\t\tthis.fetchData(filter)\n\t\t}\n\t}\n}\n\nCoCreateFilter.__init();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateFilter);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/filter/src/index.js\n")},"./node_modules/@cocreate/logic/src/attributes.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cocreate_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cocreate/observer */ \"./node_modules/@cocreate/observer/src/index.js\");\n/* harmony import */ var _cocreate_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cocreate/utils */ \"./node_modules/@cocreate/utils/src/index.js\");\n/* harmony import */ var _cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cocreate/crud-client */ \"./node_modules/@cocreate/crud-client/src/index.js\");\n/* harmony import */ var _cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst CoCreateAttributes = {\n\t//. key: colleciton.document_id.name,\n\t//. example:  \n\t/** modules.xxxxx.test: [\n\t *\t{el: element, attr: 'data-test1'},\n\t *\t{el: element, attr: 'data-test2'}\n\t * ]\n\t * \n\t **/\n\tmainInfo: {},\n\t\n\tinit: function() {\n\t\t// registerModule('fetch-attributes', this, null, this.getRequest, this.renderAttribute);\n\t\tconst self = this;\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2___default().listen('updateDocument', function(data) {\n\t\t\tself.render(data)\n\t\t})\n\t\t\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2___default().listen('readDocument', function(data) {\n\t\t\tself.render(data)\n\t\t})\n\t\t\n\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2___default().listen('connect', function(data) {\n\t\t\t// self.getRequest()\n\t\t\tself.__getRequest()\n\t\t})\n\t},\n\n\tinitElement: function(container) {\n\t\tconst requests = this.__getRequest(container)\n\n\t\tif (requests) {\n\t\t\t\n\t\t\trequests.forEach((req) => {\n\t\t\t\t_cocreate_crud_client__WEBPACK_IMPORTED_MODULE_2___default().readDocument({\n\t\t\t\t\tcollection: req['collection'],\n\t\t\t\t\tdocument_id: req['document_id']\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t},\n\n\trender: function(data) {\n\t\tconst collection = data['collection'];\n\t\tconst document_id = data['document_id'];\n\t\t\n\t\tfor (let name in data.data) {\n\t\t\tconst key = this.__makeKey(collection, document_id, name) \n\t\t\tconst value = data.data[name];\n\t\t\tif (this.mainInfo[key]) {\n\t\t\t\tthis.mainInfo[key].forEach((item) => {\n\t\t\t\t\titem.el.setAttribute(item.attr, value);\n\t\t\t\t\t\n\t\t\t\t\t// if (item.attr == 'data-collection') {\n\t\t\t\t\t// \trunInitModule('cocreate-text');\t\t\t\t\t\t\n\t\t\t\t\t// } \n\t\t\t\t\t\n\t\t\t\t\titem.el.dispatchEvent(new CustomEvent('CoCreateAttribute-run', {\n\t\t\t\t\t\teventType: 'rendered',\n\t\t\t\t\t\titem: item.el\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t},\n\t\n\tsetValue: function(element, data) {\n\t\t\n\t},\n\t\n\t__getRequest: function(container) {\n\t\tlet fetch_container = container || document;\n\t\tlet elements = fetch_container.querySelectorAll('[fetch-for]');\n\t\tlet self = this;\n\n\t\tlet requestData = [];\n\t\t\n\t\tif (elements.length === 0 && fetch_container != document && fetch_container.hasAttributes('fetch-for')) {\n\t\t\telements = [fetch_container];\n\t\t}\n\n\t\telements.forEach((el) => {\n\t\t\t//. check\n\t\t\tconst el_collection = el.getAttribute('data-collection')\n\t\t\tconst el_documentId = el.getAttribute('data-document_id')\n\t\t\tconst el_name = el.getAttribute('name')\n\t\t\tconst el_value = el.getAttribute('value')\n\t\t\t\n\t\t\tconst attributes = el.attributes;\n\t\t\t\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tlet jsonInfo = self.__jsonParse(attributes[i].value);\n\t\t\t\tif (jsonInfo) {\n\t\t\t\t\tlet collection = jsonInfo['collection'] || el_collection;\n\t\t\t\t\tlet document_id = jsonInfo['document_id'] || el_documentId;\n\t\t\t\t\tlet name = jsonInfo['name'] || el_name;\n\t\t\t\t\tlet value = jsonInfo['value'] || el_value;\n\t\t\t\t\t\n\t\t\t\t\tif (jsonInfo['data-pass_id']) {\n\t\t\t\t\t\tlet pass_info = self.__checkPassId(jsonInfo['data-pass_id']);\n\t\t\t\t\t\tif (pass_info) {\n\t\t\t\t\t\t\tcollection = pass_info.collection;\n\t\t\t\t\t\t\tdocument_id = pass_info.document_id;\n\t\t\t\t\t\t\tvalue = pass_info.value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcollection = null;\n\t\t\t\t\t\t\tdocument_id = null;\n\t\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst key = self.__makeKey(collection, document_id, name);\n\t\t\t\t\t\n\t\t\t\t\tif (collection && document_id && name) {\n\t\t\t\t\t\tif (!self.mainInfo[key]) {\n\t\t\t\t\t\t\tself.mainInfo[key] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.mainInfo[key].push({el: el, attr: attributes[i].name})\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!requestData.some((d) => d['collection'] === collection && d['document_id'] === document_id)) {\n\t\t\t\t\t\t\trequestData.push({collection, document_id})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn requestData;\n\t},\n\t\n\t__jsonParse: function(str_data) {\n\t\ttry {\n\t\t\tlet json_data = JSON.parse(str_data);\n\t\t\tif (typeof json_data === 'object' && json_data != null) {\n\t\t\t\treturn json_data;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t},\n\t\n\t__checkPassId: function(pass_id) {\n\t\tvar dataParams = localStorage.getItem('dataParams');\n\t\tdataParams = JSON.parse(dataParams);\n\n\t\tif (!dataParams || dataParams.length == 0) return null;\n\n\t\tfor (var i = 0; i < dataParams.length; i++) {\n\t\t\tif (dataParams[i].pass_to == pass_id) {\n\t\t\t\treturn {\n\t\t\t\t\tcollection: dataParams[i].collection, \n\t\t\t\t\tdocument_id: dataParams[i].document_id,\n\t\t\t\t\tvalue: dataParams[i].value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t\n\t__makeKey: function (collection, document_id, name) {\n\t\treturn `${collection}_${document_id}_${name}`;\n\t}, \n}\n\n\nCoCreateAttributes.init();\n\n_cocreate_observer__WEBPACK_IMPORTED_MODULE_0__.default.init({ \n\tname: 'CoCreateAttributes', \n\tobserve: ['subtree', 'childList'],\n\tinclude: '[data-for]', \n\tcallback: function(mutation) {\n\t\tCoCreateAttributes.initElement(mutation.target)\n\t}\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateAttributes);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/logic/src/attributes.js\n")},"./node_modules/@cocreate/logic/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cocreate_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cocreate/observer */ \"./node_modules/@cocreate/observer/src/index.js\");\n/* harmony import */ var _cocreate_action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cocreate/action */ \"./node_modules/@cocreate/action/src/index.js\");\n/* harmony import */ var _attributes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attributes.js */ \"./node_modules/@cocreate/logic/src/attributes.js\");\n\n\n\n\nconst CoCreateLogic = {\n\tattributes: _attributes_js__WEBPACK_IMPORTED_MODULE_2__.default,\n\t\n\tinit: function() {\n\t\tthis.__initKeys();\n\t\tthis.__initPassSessionIds();\n\t\tthis.__initPassParams();\n\t\tthis.__initPassValueParams();\n\t\t// this.__initValuePassBtns();\n\t\tthis.__initGetValueInput();\n\t\tthis.initAtagElement();\n\t},\n\t\t\n\t// getKeys\n\t__initKeys: function() {\n\t\tif (window.localStorage.getItem('apiKey')) {\n\t\t\tconfig.apiKey = window.localStorage.getItem('apiKey');\n\t\t}\n\t\tif (window.localStorage.getItem('securityKey')) {\n\t\t\tconfig.securityKey = window.localStorage.getItem('securityKey');\n\t\t}\n\t\tif (window.localStorage.getItem('organization_id')) {\n\t\t\tconfig.organization_Id = window.localStorage.getItem('organization_id');\n\t\t}\n\t},\n\t\n\t//. passSessionIds\n\t__initPassSessionIds: function() {\n\t\tlet orgId = window.localStorage.getItem('organization_id');\n\t\tlet user_id = window.localStorage.getItem('user_id');\n\t\tlet adminUI_id = window.localStorage.getItem('adminUI_id');\n\t\tlet builderUI_id = window.localStorage.getItem('builderUI_id');\n\n\t\tthis.__initPassItems(orgId, \t\t\t\".sessionOrg_Id\", true);\n\t\tthis.__initPassItems(user_id, \t\t\".sessionUser_Id\");\n\t\tthis.__initPassItems(adminUI_id,\t\".sessionAdminUI_Id\");\n\t\tthis.__initPassItems(builderUI_id,\".sessionBuilderUI_Id\");\n\t},\n\t\n\tinitElement: function(container) {\n\t\tconst self = this;\n\t\tlet mainContainer = container || document;\n\t\tif (!mainContainer.querySelectorAll) {\n\t\t\treturn;\n\t\t}\n\t\tlet elements = mainContainer.querySelectorAll('[data-pass_id]');\n\t\telements = Array.from(elements);\n\t\tif (mainContainer != document && mainContainer.hasAttribute('data-pass_id')) {\n\t\t\telements.push(mainContainer)\n\t\t}\n\t\tlet dataParams = window.localStorage.getItem('dataParams');\n\t\tdataParams = JSON.parse(dataParams);\n\t\tif (!dataParams || dataParams.length == 0) return;\n\t\t\n\t\telements.forEach((el) => {\n\t\t\tif (_cocreate_observer__WEBPACK_IMPORTED_MODULE_0__.default.getInitialized(el)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst pass_id = el.getAttribute('data-pass_id')\n\t\t\tconst paramObj = dataParams.find(x => x.pass_to == pass_id)\n\t\t\tif (!paramObj) return;\n\n\t\t\tconst {collection, document_id, pass_to, prefix} = paramObj;\n\t\t\t_cocreate_observer__WEBPACK_IMPORTED_MODULE_0__.default.setInitialized(el)\n\t\t\t\n\t\t\tif (el.tagName === \"FORM\" && !el.getAttribute('data-colleciton') && collection) {\n\t\t\t\tel.setAttribute('data-colleciton', collection);\n\t\t\t}\n\t\t\tself.__setPassAttributes(el, paramObj);\n\n\n\t\t});\n\t},\n\t\n\tinitAtagElement: function() {\n\t\tconst self = this;\n\t\tdocument.addEventListener('click', function(event) {\n\t\t\tconst target = event.target.closest('a, button')\n\t\t\tif (!target)  return;\n\t\t\t\n\t\t\tif (target.getAttribute('target') === 'modal' && target.getAttribute('data-pass_to')) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// event.stopImmediatePropagation()\n\t\t\t\tself.setLinkProcess(target);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst href = target.getAttribute('href');\n\t\t\tif (target.getAttribute('target') !== 'modal') {\n\t\t\t\tif (target.hasAttribute('data-actions')) return;\n\t\t\t\tif (!self.passSubmitProcess(target)) return;\n\t\t\t\tconst pass_to = target.getAttribute('data-pass_to');\n\t\t\t\tif (href) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tself.storePassData(target)\n\t\t\t\t\tself.openAnother(target)\n\t\t\t\t} else {\n\t\t\t\t\tself.storePassData(target)\n\t\t\t\t\tif (pass_to) {\n\t\t\t\t\t\tself.__initPassParams(pass_to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t})\n\t},\n\t\n\t//. passParams\n\t__initPassParams: function(pass_to) {\n\t\tvar dataParams = window.localStorage.getItem('dataParams');\n\t\tdataParams = JSON.parse(dataParams);\n\n\t\tif (!dataParams || dataParams.length == 0) return;\n\t\tlet self = this;\n\t\t\n\t\tdataParams.forEach(function(dataParam) {\n\t\t\tvar param_collection = dataParam.collection;\n\t\t\tvar param_document_id = dataParam.document_id;\n\t\t\tvar param_prefix = dataParam.prefix;\n\t\t\tvar param_pass_to = dataParam.pass_to;\n\t\t\t\n\t\t\tif (pass_to && param_pass_to != pass_to) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar forms = document.querySelectorAll('form');\n\t\t\t\n\t\t\tforms.forEach((form) => {\n\t\t\t\tvar pass_id = form.getAttribute('data-pass_id');\n\t\t\t\tif (pass_id && pass_id == param_pass_to && param_collection && param_collection != \"\") {\n\t\t\t\t\tif (!form.getAttribute('data-collection')) {\n\t\t\t\t\t\tform.setAttribute('data-collection', param_collection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar allTags = document.querySelectorAll('[data-pass_id]');\n\t\t\tallTags.forEach((tag) => {\n\t\t\t\tvar pass_id = tag.getAttribute('data-pass_id');\n\t\t\t\tif (pass_id && pass_id == param_pass_to) {\n\t\t\t\t\tself.__setPassAttributes(tag, dataParam)\n\t\t\t\t}\n\t\t\t})\n\t\t})\t\t\n\t},\n\t\n\t// passValueParams\n\t__initPassValueParams: function(contianer) {\n\t\tvar valueParams = window.localStorage.getItem('valueParams');\n\t\tvalueParams = JSON.parse(valueParams);\n\t\t\n\t\tif (!valueParams || valueParams.length == 0) return;\n\t\t\n\t\tvalueParams.forEach(function(valueParam) {\n\t\t\tvar pass_value_to = valueParam.pass_value_to;\n\t\t\t// var inputs = (contianer || document).querySelectorAll('input, textarea, select');\n\t\t\tvar inputs = (contianer || document).querySelectorAll('[data-pass_value_id]');\n\t\t\t\n\t\t\tinputs.forEach((input) => {\n\t\t\t\tlet pass_value_id = input.getAttribute('data-pass_value_id');\n\t\t\t\t\n\t\t\t\tif (pass_value_id && pass_value_id == pass_value_to) {\n\t\t\t\t\tif (['INPUT', 'TEXTAREA', 'SELECT'].includes(input.tagName)) {\n\t\t\t\t\t\tinput.value = valueParam.value;\n\t\t\t\t\t\tif (CoCreate.floatingLabel) CoCreate.floatingLabel.update(input)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinput.innerHTML = valueParam.value;\n\t\t\t\t\t}\n\t\t\t\t}\t    \t\n\t\t\t})\n\t\t})\t\t\n\t},\n\t\n\t__getPassAttributes: function (element) {\n\t\treturn {\n\t\t\tcollection : element.getAttribute('data-pass_collection') || element.getAttribute('data-pass_fetch_collection'),\n\t\t\tdocument_id : element.getAttribute('data-pass_document_id'),\n\t\t\tname : element.getAttribute('data-pass_name'),\n\t\t\tvalue : element.getAttribute('data-pass_value'),\n\t\t\tpass_to: element.getAttribute('data-pass_to'),\n\t\t\tfilter_name: element.getAttribute('data-pass_filter_name'),\n\t\t\tfilter_value: element.getAttribute('data-pass_filter_value'),\n\t\t\tprefix: element.getAttribute('data-pass_prefix') || \"\"\n\t\t}\t\n\t},\n\t\n\t__setPassAttributes: function(el, param) {\n\t\tconst {collection, document_id, name, value, pass_to, filter_name, filter_value, prefix} = param;\n\t\tconst pass_id = el.getAttribute('data-pass_id')\n\t\tconst isRefresh = el.hasAttribute('data-pass_refresh') ? true: false;\n\t\t\n\t\tif (pass_id != pass_to) return ;\n\t\t\n\t\tif (collection) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-collection', collection, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-fetch_collection', collection, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_fetch_collection', collection, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_collection', collection, isRefresh);\n\t\t}\n\t\t\n\t\tif (document_id) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-document_id', document_id, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-fetch_document_id', document_id, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_fetch_document_id', document_id, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_document_id', document_id, isRefresh);\n\t\t}\n\t\t\n\t\tif (name) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'name', name, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-fetch_name', name, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_name', name, isRefresh);\n\t\t}\n\t\t\n\t\tif (value) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'value', value, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_value', value, isRefresh);\n\t\t}\n\t\t\n\t\tif (prefix) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'name', prefix + el.getAttribute('name'), isRefresh, true);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-fetch_name', prefix + el.getAttribute('data-fetch_name'), isRefresh, true);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_prefix', prefix, isRefresh);\n\t\t}\n\t\t\n\t\tif (filter_name) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-filter_name', filter_name, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_filter_name', filter_name, isRefresh);\n\t\t}\n\t\t\n\t\tif (filter_value) {\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-filter_value', filter_value, isRefresh);\n\t\t\tthis.__setAttributeValueOfElement(el, 'data-pass_filter_value', filter_value, isRefresh);\n\t\t}\n\t},\n\t\n\t__setAttributeValueOfElement: function (el, attrname, value, isRefresh, onlyHas) {\n\t\tif (value) {\n\t\t\tif (el.hasAttribute(attrname) && onlyHas) {\n\t\t\t\tel.setAttribute(attrname, value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (el.hasAttribute(attrname) && (!el.getAttribute(attrname) || isRefresh)) {\n\t\t\t\tel.setAttribute(attrname, value);\n\t\t\t\treturn \n\t\t\t}\n\t\t}\n\t},\n\t\n\t//. storePassData\n\tstorePassData: function(aTag) {\n\t\tlet dataParams = [];\n\t\tconst self = this;\n\t\tlet param = this.__getPassAttributes(aTag);\n\t\t\n\t\tif (aTag.hasAttribute('data-actions')) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (param.pass_to) {\n\t\t\tdataParams.push(param);\n\t\t}\n\t\t\n\t\tlet tags = aTag.querySelectorAll('[data-pass_to]');\n\n\t\ttags.forEach((tag) => {\n\t\t\tlet passParam = self.__getPassAttributes(tag)\n\t\t\tif (passParam.pass_to) {\n\t\t\t\tdataParams.push(passParam);\n\t\t\t}\t\t\t\n\t\t})\n\t\tif (dataParams.length > 0) localStorage.setItem('dataParams', JSON.stringify(dataParams));\n\t},\n\t\n\n\t//. initValuePassBtns\n\t__initValuePassBtns: function() {\n\t\t// let forms = document.getElementsByTagName('form');\n\t\n\t\t// for (let i=0; i < forms.length; i++) {\n\t\t// \tlet form = forms[i];\n\t\t\t\n\t\t// \tlet valuePassBtn = form.querySelector('.passValueBtn');\n\t\t\t\n\t\t// \tif (valuePassBtn) this.__registerValuePassBtnEvent(form, valuePassBtn);\n\t\t// }\n\t},\n\t\n\t__initGetValueInput: function() {\n\t\tvar inputs = document.querySelectorAll('input, textarea');\n\t\tlet self = this;\n\t\t\n\t\tfor (var i = 0; i < inputs.length; i++) {\n\t\t  var input = inputs[i];\n\t\t  \n\t\t  if (!input.id) {\n\t\t\tcontinue;\n\t\t  }\n\t\t  \n\t\t  input.addEventListener('input', function(e) {\n\t\t\tself.__setGetValueProcess(this.id, this.value)\n\t\t  })\n\t\t  \n\t\t  input.addEventListener('updated_by_fetch', function(e) {\n\t\t\tself.__setGetValueProcess(this.id, this.value);\n\t\t  })\n\t\t}\n\t},\n\t\n\t//. initValuePassBtn\n\t__registerValuePassBtnEvent: function(form, valuePassBtn) {\n\t\t// let self = this;\n\t\t// return;\n\t\t// valuePassBtn.addEventListener('click', function(e) {\n\t\t// \tlet inputs = form.querySelectorAll('input, textarea, select');\n\t\t\t\n\t\t// \tif (valuePassBtn.hasAttribute('data-actions')) {\n\t\t// \t\treturn;\n\t\t// \t}\n\t\t\t\n\t\t// \tlet valueParams = [];\n\t\t\t\n\t\t// \tfor (let i = 0; i < inputs.length; i++) {\n\t\t// \t\tlet input = inputs[i];\n\t\t\t\t\n\t\t// \t\tlet pass_value_to = input.getAttribute('data-pass_value_to');\n\t\t// \t\tlet value = input.value;\n\t\t\t\t\n\t\t// \t\tif (pass_value_to) {\n\t\t// \t\t\tvalueParams.push({\n\t\t// \t\t\t\tpass_value_to: pass_value_to,\n\t\t// \t\t\t\tvalue: value\n\t\t// \t\t\t})\n\t\t// \t\t}\n\t\t// \t}\n\t\t\t\n\t\t// \tif (valueParams.length > 0) localStorage.setItem('valueParams', JSON.stringify(valueParams));\n\t\t\t\n\t\t// \tself.__initPassValueParams();\n\t\t\t\n\t\t// \tlet aTag = valuePassBtn.querySelector('a');\n\t\t\t\n\t\t// \tif (aTag) self.setLinkProcess(aTag);\n\t\t// })\n\t},\n\t\n\tpassProcessAction: function(btn) {\n\t\tlet form = btn.closest('form')\n\t\tif (!form) return;\n\t\t\n\t\tlet inputs = form.querySelectorAll('input, textarea, select');\n\t\tlet valueParams = [];\n\t\t\n\t\tinputs.forEach(el => {\n\t\t\tconst pass_value_to = el.getAttribute('data-pass_value_to');\n\t\t\tconst value = el.value;\n\t\t\tif (pass_value_to) {\n\t\t\t\tvalueParams.push({\n\t\t\t\t\tpass_value_to: pass_value_to,\n\t\t\t\t\tvalue: value\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t\n\t\tif (valueParams.length > 0) {\n\t\t\twindow.localStorage.setItem('valueParams', JSON.stringify(valueParams));\n\t\t}\n\t\tthis.__initPassValueParams()\n\t\t// let aTag = btn.querySelector('a');\n\t\t// if (aTag) this.setLinkProcess(aTag);\n\t\t\n\t\t//. end event\n\t\tdocument.dispatchEvent(new CustomEvent('passValueActionEnd', {\n\t\t\tdetail: {}\n\t\t}))\n\t},\n\t\n\tsetDataPassValues: function(values) {\n\t\tconst valueParams = []\n\t\tfor ( let key in values) {\n\t\t\tvalueParams.push({\n\t\t\t\tpass_value_to: key,\n\t\t\t\tvalue: values[key]\n\t\t\t})\n\t\t}\n\t\t\n\t\tif (valueParams.length > 0) {\n\t\t\twindow.localStorage.setItem('valueParams', JSON.stringify(valueParams));\n\t\t}\n\t},\n\t\n\tinitDataPassValues: function() {\n\t\twindow.localStorage.removeItem('valueParams');\t\n\t},\n\n\t//. openAnother\n\topenAnother: function(atag) {\n\n\t\tvar href = atag.getAttribute('href');\n\t\tvar target = atag.getAttribute('target');\n\t\t\n\t\tif (target == \"_blank\") {\n\t\t  window.open(href, \"_blank\");  \n\t\t} else if (target == \"_window\") {\n\t\t  window.open(href, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\n\t\t} else {\n\t\t  window.open(href, \"_self\");\n\t\t}\n\t},\n\t\n\t//. clickATaginButton\n\tsetLinkProcess: function(aTag) {\n\t\t\n\t\tif(aTag.hasAttribute('data-actions')) {\n\t\t\treturn;\n\t\t}\n\t\tconst pass_to = aTag.getAttribute('data-pass_to');\n\t\tconst href = aTag.getAttribute('href');\n\t\tthis.storePassData(aTag);\n\t\tif (this.checkOpenCocreateModal(aTag)) {\n\t\t\tif (typeof CoCreate.modal !== 'undefined') {\n\t\t\t\tCoCreate.modal.open(aTag);\n\t\t\t}\n\t\t} else if (href) {\n\t\t\tthis.openAnother(aTag);\n\t\t} else if (pass_to) {\n\t\t\tthis.__initPassParams(pass_to);\n\t\t}\n\t},\n\t\n\tcheckOpenCocreateModal: function(atag) {\n\t  if (atag.getAttribute('target') === \"modal\") {\n\t\treturn true;\n\t  } \n\t  return false;\n\t},\n\t\n\tpassSubmitProcess: function(element) {\n\t\tif (element.parentNode.classList.contains('submitBtn')) {\n\t\t\tif ( element.getAttribute('data-pass_to') && element.getAttribute('data-pass_document_id')) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\t\n\t\n\t__setGetValueProcess: function(id, value) {\n\t\t\n\t\tif (!id) return;\n  \n\t\tvar targets = document.querySelectorAll('[data-get_value=\"' + id + '\"]');\n\t\t\n\t\ttargets.forEach((target) => {\n\t\t  // target.value = value;\n\t\t  if (typeof(target.value) != \"undefined\") {\n\t\t\ttarget.value = value;\n\t\t  } else if (typeof(target.textContent) != \"undefined\") {\n\t\t\ttarget.textContent = value;\n\t\t  }\n\t\t  \n\t\t  if (CoCreate.floatingLabel) CoCreate.floatingLabel.update(target)\n\t\t  \n\t\t  target.dispatchEvent(new Event(\"input\", {\"bubbles\":true})); \n\t\t  \n\t\t  if (target.classList.contains('searchInput')) {\n\t\t\tlet evt = new KeyboardEvent('keydown', {'keyCode': 13});\n\t\t\ttarget.dispatchEvent(evt);\n\t\t  }\n\t\t})\n\t},\n\t\n\t__initPassItems: function(id, selector, noFetch) {\n\t\tconst self = this;\n\t\tif (id) {\n\t\t\tlet elements = document.querySelectorAll(selector);\n\t\t\telements.forEach(el => {\n\t\t\t\tself.__setAttributeValueOfElement(el, 'data-document_id', id);\n\t\t\t\t// self.__setAttributeValueOfElement(el, 'data-fetch_document_id', id);\n\t\t\t\tself.__setAttributeValueOfElement(el, 'data-filter_value', id);\n\t\t\t})\n\t\t}\n\t},\n}\n\n\nCoCreateLogic.init();\n\n_cocreate_observer__WEBPACK_IMPORTED_MODULE_0__.default.init({ \n\tname: 'CoCreateAttributes', \n\tobserve: ['subtree', 'childList'],\n\tinclude: '[data-for]', \n\tcallback: function(mutation) {\n\t\tCoCreateLogic.attributes.initElement(mutation.target)\n\t}\n});\n\n_cocreate_observer__WEBPACK_IMPORTED_MODULE_0__.default.init({ \n\tname: 'CoCreateLogic', \n\tobserve: ['subtree', 'childList'],\n\tinclude: '[data-pass_id]', \n\tcallback: function(mutation) {\n\t\tCoCreateLogic.initElement(mutation.target)\n\t}\n});\n\n_cocreate_action__WEBPACK_IMPORTED_MODULE_1__.default.init({\n\taction: \"passValueAction\",\n\tendEvent: \"passValueActionEnd\",\n\tcallback: (btn, data) => {\n\t\tCoCreateLogic.passProcessAction(btn)\n\t},\n})\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateLogic);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/logic/src/index.js\n")},"./node_modules/@cocreate/observer/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// window.addEventListener("load", () => {\n\n/*\nCoCreate.observer.init({ \n\tname: \'CoCreateFetchInit\', // no usage, just to provide for console debugging \n\tobserve: [\'subtree\', \'childList\',\'attributes\'], // the same parameters of options in #https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe\n\tattributes: [\'data-fetch_collection\'], // it doesn\'t count added nodes or remove nodes\n\tinclude: ".classname", // a selector to select only elements that matches\n\texclude: ".classname", // a selector to exclude elements from processing\n\tcallback: function(mutation) { // a function which gets a mutation object according to #https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\n\t\tCoCreateFetch.initElement(mutation.target)\n\t}\n})\n*/\n\n\n/**\n * description\n * \n * @param {String} [name] - an optional name to provide for debugging console\n * @param {Array} observe - a list of mutation type to be observerd, a mix of possible `attributes`, `childList` or `subtree`\n * ... and other params can be here \n * \n * @return null\n */\nwindow.profiler = {}\nwindow.counter = 0;\nwindow.counter2 = 0;\nwindow.targets = {};\nwindow.attributeName = {};\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function(s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n      while (--i >= 0 && matches.item(i) !== this) {}\n      return i > -1;\n    };\n}\n\nconst CoCreateObserver = {\n  initTasks: new Map(),\n  attrTasks: new Map(),\n  rules: new Map(),\n  rulesArray: [],\n\n  __init: function() {\n    const self = this;\n    const observer = new MutationObserver((mutationsList, observer) => self.__callback(mutationsList, observer));\n\n    // setTimeout(()=>{\n    observer.observe(document.body, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: false,\n      attributeOldValue: true,\n      characterData: true,\n    });\n  },\n\n  // init: function(data) {\n  //   this.add(data);\n  // },\n\n  init: function({ observe, include, exclude, attributes, name, callback }) {\n    console.log(\' aaaaaaaaaaaaaa observer init \',name)\n\n    // if (name == \'ccAttribute\' || name == \'ccCss\') {\n      if (observe.some(x => x == "childList")) {\n        this.initTasks.set(callback, { observe, include, exclude, attributes, name });\n      }\n\n      if (observe.some(x => x == "attributes")) {\n        this.attrTasks.set(callback, { observe, include, exclude, attributes, name });\n      }\n    // }\n\n  },\n  remove: function(callback) {\n    this.initTasks.delete(callback)\n    this.attrTasks.delete(callback)\n  },\n\n  addRule: function({ include, exclude, name }) {\n    this.rules.set(name, { include, exclude });\n    this.rulesArray = Array.from(this.rules);\n  },\n\n  removeRule: function({ name }) {\n    this.rules.delete(name);\n    this.rulesArray = Array.from(this.rules);\n  },\n\n  __callback: function(mutationsList, observer) {\n    // console.log(this)\n    window.counter++;\n    for (let mutation of mutationsList) {\n      if (mutation.type == "childList" && mutation.addedNodes.length > 0) {\n        //. run init functions\n        this.__initCallback(mutation)\n      }\n\n      if (mutation.type == "attributes") {\n        //. run attributes functions\n        this.__attrCallback(mutation);\n      }\n    }\n  },\n\n  __initCallback: function(mutation) {\n    let addedNodes = Array.from(mutation.addedNodes);\n\n    this.initTasks.forEach(({ observe, include, exclude, attributes, name }, callback) => {\n\n      mutation.addedNodes.forEach((el) => {\n        if (!el.tagName) return;\n\n        if (include && !(el.matches(include) || el.querySelector(include))) {\n          return\n        }\n        if (exclude && (el.matches(exclude) || el.querySelector(exclude))) {\n          return;\n        }\n\n        // if (el.created) return;\n        // window.counter2++;\n        // window.profiler[name] = window.profiler[name] != undefined ? window.profiler[name] + 1 : 0;\n        // window.targets[mutation.target.id || mutation.target.tagName] =\n        //   window.targets[mutation.target.id || mutation.target.tagName] != undefined ?\n        //   window.targets[mutation.target.id || mutation.target.tagName] + 1 :\n        //   0;\n\n        // window.attributeName[mutation.attributeName] =\n        //   window.attributeName[mutation.attributeName] != undefined ?\n        //   window.attributeName[mutation.attributeName] + 1 :\n        //   0;\n        callback.apply(null, [{ type: mutation.type, target: el }]);\n      })\n    });\n\n    // addedNodes.map(el => el.created = true);\n  },\n\n  __attrCallback: function(mutation) {\n    for (let [name, { include, exclude }] of this.rulesArray) {\n      if (include && !mutation.target.matches(include)) return;\n      if (exclude && mutation.target.matches(exclude)) return;\n    }\n    this.attrTasks.forEach(({ observe, include, exclude, attributes, name }, callback) => {\n      if (attributes && mutation.attributeName && !attributes.includes(mutation.attributeName)) {\n        return;\n      }\n      if (include && !mutation.target.matches(include)) return;\n      if (exclude && mutation.target.matches(exclude)) return;\n\n      if (mutation.attributeName) {\n        let newValue = mutation.target.getAttribute(mutation.attributeName);\n        if (newValue != mutation.oldValue) {\n          // window.counter2++;\n          // window.profiler[name] = window.profiler[name] != undefined ? window.profiler[name] + 1 : 0;\n          // window.targets[mutation.target.id || mutation.target.tagName] =\n          //   window.targets[mutation.target.id || mutation.target.tagName] != undefined ?\n          //   window.targets[mutation.target.id || mutation.target.tagName] + 1 :\n          //   0;\n\n          // window.attributeName[mutation.attributeName] =\n          //   window.attributeName[mutation.attributeName] != undefined ?\n          //   window.attributeName[mutation.attributeName] + 1 :\n          //   0;\n          callback.apply(null, [mutation]);\n        }\n      }\n\n    })\n  },\n\n  setInitialized: function(element, type) {\n    // element.setAttribute(`initialized_${type}`, "true");\n    type = type || "";\n    let key = "co_initialized_" + type;\n    element[key] = true;\n  },\n\n  getInitialized: function(element, type) {\n    type = type || "";\n    let key = "co_initialized_" + type;\n    if (!element[key]) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n}\n\nCoCreateObserver.__init();\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateObserver);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/observer/src/index.js\n')},"./node_modules/@cocreate/socket-client/src/common-fun.js":function(module,exports){eval('var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n        \treturn factory(window)\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== \'undefined\' ? self : this, function (wnd) {\n  function getCommonParams() \n  {\n    let config = {};\n    if (wnd && wnd.config) {\n      config = wnd.config\n    }\n    \n    return {\n      "apiKey":           config.apiKey,\n      "securityKey":      config.securityKey,\n      "organization_id":  config.organization_Id,\n    }\n  }\n  \n  function getCommonParamsExtend(info) \n  {\n    let config = {};\n    if (wnd && wnd.config) config = wnd.config\n    \n    return {\n      "apiKey":           info.apiKey || config.apiKey,\n      "securityKey":      info.securityKey || config.securityKey,\n      "organization_id":  info.organization_id || config.organization_Id,\n    }\n  }\n  \n  function generateSocketClient (namespace, room) \n  {\n    let config = {};\n    if (wnd && wnd.config) config = wnd.config\n    \n    let ns = namespace || config.organization_Id\n    let rr = room || \'\';\n    if (rr) {\n      return `${ns}/${rr}`\n    } else {\n      return ns;\n    }\n  }\n  \n  function GenerateUUID(length = 36) {\n    let d = new Date().getTime();\n    let d2 = 0;\n    let pattern = "uxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";\n  \n    if (length <= pattern.length) {\n      pattern = pattern.substr(0, length);\n    } else {\n      let add_len = length - pattern.length;\n      let sub_pattern = "-xxxyyxxx";\n  \n      let group_n = Math.floor(add_len / sub_pattern.length);\n  \n      for (let i = 0; i < group_n; i++) {\n        pattern += sub_pattern;\n      }\n  \n      group_n = add_len - group_n * sub_pattern.length;\n      pattern += sub_pattern.substr(0, group_n);\n    }\n  \n    let uuid = pattern.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16;\n      if (d > 0) {\n        var r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {\n        var r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n      return (c == "x" ? r : (r & 0x7) | 0x8).toString(16);\n    });\n    return uuid;\n  }\n  \n  return {getCommonParams, getCommonParamsExtend, generateSocketClient, GenerateUUID};\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mdWxsY2FsZW5kYXIvLi9ub2RlX21vZHVsZXMvQGNvY3JlYXRlL3NvY2tldC1jbGllbnQvc3JjL2NvbW1vbi1mdW4uanM/NjkxMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFFBQVEsSUFBMEM7QUFDbEQ7QUFDQSxRQUFRLGlDQUFPLEVBQUUsbUNBQUU7QUFDbkI7QUFDQSxTQUFTO0FBQUEsa0dBQUM7QUFDVixLQUFLLE1BQU0sRUFRUjtBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsR0FBRyxHQUFHLEdBQUc7QUFDekIsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLGFBQWE7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLFVBQVU7QUFDVixDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0Bjb2NyZWF0ZS9zb2NrZXQtY2xpZW50L3NyYy9jb21tb24tZnVuLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgICAvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuXG4gICAgICAgIGRlZmluZShbXSwgZnVuY3Rpb24oKSB7XG4gICAgICAgIFx0cmV0dXJuIGZhY3Rvcnkod2luZG93KVxuICAgICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgIC8vIE5vZGUuIERvZXMgbm90IHdvcmsgd2l0aCBzdHJpY3QgQ29tbW9uSlMsIGJ1dFxuICAgICAgICAvLyBvbmx5IENvbW1vbkpTLWxpa2UgZW52aXJvbm1lbnRzIHRoYXQgc3VwcG9ydCBtb2R1bGUuZXhwb3J0cyxcbiAgICAgICAgLy8gbGlrZSBOb2RlLlxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkobnVsbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQnJvd3NlciBnbG9iYWxzIChyb290IGlzIHdpbmRvdylcbiAgICAgICAgcm9vdC5yZXR1cm5FeHBvcnRzID0gZmFjdG9yeSh3aW5kb3cpO1xuICB9XG59KHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbiAod25kKSB7XG4gIGZ1bmN0aW9uIGdldENvbW1vblBhcmFtcygpIFxuICB7XG4gICAgbGV0IGNvbmZpZyA9IHt9O1xuICAgIGlmICh3bmQgJiYgd25kLmNvbmZpZykge1xuICAgICAgY29uZmlnID0gd25kLmNvbmZpZ1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgXCJhcGlLZXlcIjogICAgICAgICAgIGNvbmZpZy5hcGlLZXksXG4gICAgICBcInNlY3VyaXR5S2V5XCI6ICAgICAgY29uZmlnLnNlY3VyaXR5S2V5LFxuICAgICAgXCJvcmdhbml6YXRpb25faWRcIjogIGNvbmZpZy5vcmdhbml6YXRpb25fSWQsXG4gICAgfVxuICB9XG4gIFxuICBmdW5jdGlvbiBnZXRDb21tb25QYXJhbXNFeHRlbmQoaW5mbykgXG4gIHtcbiAgICBsZXQgY29uZmlnID0ge307XG4gICAgaWYgKHduZCAmJiB3bmQuY29uZmlnKSBjb25maWcgPSB3bmQuY29uZmlnXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIFwiYXBpS2V5XCI6ICAgICAgICAgICBpbmZvLmFwaUtleSB8fCBjb25maWcuYXBpS2V5LFxuICAgICAgXCJzZWN1cml0eUtleVwiOiAgICAgIGluZm8uc2VjdXJpdHlLZXkgfHwgY29uZmlnLnNlY3VyaXR5S2V5LFxuICAgICAgXCJvcmdhbml6YXRpb25faWRcIjogIGluZm8ub3JnYW5pemF0aW9uX2lkIHx8IGNvbmZpZy5vcmdhbml6YXRpb25fSWQsXG4gICAgfVxuICB9XG4gIFxuICBmdW5jdGlvbiBnZW5lcmF0ZVNvY2tldENsaWVudCAobmFtZXNwYWNlLCByb29tKSBcbiAge1xuICAgIGxldCBjb25maWcgPSB7fTtcbiAgICBpZiAod25kICYmIHduZC5jb25maWcpIGNvbmZpZyA9IHduZC5jb25maWdcbiAgICBcbiAgICBsZXQgbnMgPSBuYW1lc3BhY2UgfHwgY29uZmlnLm9yZ2FuaXphdGlvbl9JZFxuICAgIGxldCByciA9IHJvb20gfHwgJyc7XG4gICAgaWYgKHJyKSB7XG4gICAgICByZXR1cm4gYCR7bnN9LyR7cnJ9YFxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnM7XG4gICAgfVxuICB9XG4gIFxuICBmdW5jdGlvbiBHZW5lcmF0ZVVVSUQobGVuZ3RoID0gMzYpIHtcbiAgICBsZXQgZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIGxldCBkMiA9IDA7XG4gICAgbGV0IHBhdHRlcm4gPSBcInV4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiO1xuICBcbiAgICBpZiAobGVuZ3RoIDw9IHBhdHRlcm4ubGVuZ3RoKSB7XG4gICAgICBwYXR0ZXJuID0gcGF0dGVybi5zdWJzdHIoMCwgbGVuZ3RoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IGFkZF9sZW4gPSBsZW5ndGggLSBwYXR0ZXJuLmxlbmd0aDtcbiAgICAgIGxldCBzdWJfcGF0dGVybiA9IFwiLXh4eHl5eHh4XCI7XG4gIFxuICAgICAgbGV0IGdyb3VwX24gPSBNYXRoLmZsb29yKGFkZF9sZW4gLyBzdWJfcGF0dGVybi5sZW5ndGgpO1xuICBcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXBfbjsgaSsrKSB7XG4gICAgICAgIHBhdHRlcm4gKz0gc3ViX3BhdHRlcm47XG4gICAgICB9XG4gIFxuICAgICAgZ3JvdXBfbiA9IGFkZF9sZW4gLSBncm91cF9uICogc3ViX3BhdHRlcm4ubGVuZ3RoO1xuICAgICAgcGF0dGVybiArPSBzdWJfcGF0dGVybi5zdWJzdHIoMCwgZ3JvdXBfbik7XG4gICAgfVxuICBcbiAgICBsZXQgdXVpZCA9IHBhdHRlcm4ucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbiAoYykge1xuICAgICAgdmFyIHIgPSBNYXRoLnJhbmRvbSgpICogMTY7XG4gICAgICBpZiAoZCA+IDApIHtcbiAgICAgICAgdmFyIHIgPSAoZCArIHIpICUgMTYgfCAwO1xuICAgICAgICBkID0gTWF0aC5mbG9vcihkIC8gMTYpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHIgPSAoZDIgKyByKSAlIDE2IHwgMDtcbiAgICAgICAgZDIgPSBNYXRoLmZsb29yKGQyIC8gMTYpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIChjID09IFwieFwiID8gciA6IChyICYgMHg3KSB8IDB4OCkudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xuICAgIHJldHVybiB1dWlkO1xuICB9XG4gIFxuICByZXR1cm4ge2dldENvbW1vblBhcmFtcywgZ2V0Q29tbW9uUGFyYW1zRXh0ZW5kLCBnZW5lcmF0ZVNvY2tldENsaWVudCwgR2VuZXJhdGVVVUlEfTtcbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/socket-client/src/common-fun.js\n')},"./node_modules/@cocreate/socket-client/src/index.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./common-fun.js */ \"./node_modules/@cocreate/socket-client/src/common-fun.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(commonFunc) {\n        \treturn factory(commonFunc, window, WebSocket, Blob)\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== 'undefined' ? self : this, function (commonFunc, wnd, WebSocket, Blob) {\n\n    class CoCreateSocketClient\n\t{\n\t\tconstructor(prefix = \"crud\") {\n\t\t\tthis.prefix = prefix || \"crud\";\n\t\t\tthis.sockets = new Map();\n\t\t\tthis.listeners = new Map();\n\t\t\tthis.messageQueue =  new Map();\n\t\t\tthis.saveFileName =  '';\n\t\t\tthis.globalScope =  \"\";\n\t\t}\n\t\n\t\tsetGlobalScope(scope) {\n\t\t\tthis.globalScope = `${this.prefix}/${scope}`;\n\t\t}\n\t\t\n\t\tgetGlobalScope() {\n\t\t\treturn this.globalScope;\n\t\t}\n\t\t\n\t\t/**\n\t\t * config: {namespace, room, host}\n\t\t */\n\t\tcreate (config) {\n\t\t\t\n\t\t\tconst {namespace, room} = config;\n\t\t\tconst key = this.getKey(namespace, room);\n\t\t\tlet _this = this;\n\t\t\tif (namespace) {\n\t\t\t\tthis.setGlobalScope(namespace)\n\t\t\t}\n\t\t\t\n\t\t\tlet socket;\n\t\t\tif (this.sockets.get(key)) {\n\t\t\t\tsocket = this.sockets.get(key);\n\t\t\t\tconsole.log('SOcket already has been register');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tlet w_protocol = wnd.location.protocol;\t\t\n\t\t\tif (wnd.location.protocol === \"about:\") {\n\t\t\t\tw_protocol = wnd.parent.location.protocol;\n\t\t\t\tif (!config.host) {\n\t\t\t\t\tconfig.host = wnd.parent.location.host;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet protocol = w_protocol === 'http:' ? 'ws' : 'wss';\n\t\t\t\n\t\t\tconst port = config.port ? config.port : 8088;\n\t\t\t\n\t\t\tlet socket_url = `${protocol}://${wnd.location.host}:${port}/${key}`;\n\t\t\t\n\t\t\tif (config.host) {\n\t\t\t\tif (config.host.includes(\"://\")) {\n\t\t\t\t\tsocket_url = `${config.host}/${key}`;\n\t\t\t\t} else {\n\t\t\t\t\tif (config.host.includes(\":\")) {\n\t\t\t\t\t\tsocket_url = `${protocol}://${config.host}/${key}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsocket_url = `${protocol}://${config.host}:${port}/${key}`;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tsocket = new WebSocket(socket_url);\n\t\t\t} catch(error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsocket.onopen = function(event) {\n\t\t\t\tconst messages = _this.messageQueue.get(key) || [];\n\t\t\t\tmessages.forEach(msg => socket.send(JSON.stringify(msg)));\n\t\t\t\t\n\t\t\t\t_this.sockets.set(key, socket);\n\t\t\t\t_this.messageQueue.set(key, []);\n\t\t\t}\n\t\t\t\n\t\t\tsocket.onclose = function(event) {\n\t\t\t\tswitch(event.code) {\n\t\t\t\t\tcase 1000: // close normal\n\t\t\t\t\t\tconsole.log(\"websocket: closed\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\t_this.destroy(socket, key);\n\t\t\t\t\t\t_this.reconnect(socket, config);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsocket.onerror = function(err) {\n\t\t\t\t_this.destroy(socket, key);\n\t\t\t\t_this.reconnect(socket, config);\n\t\t\t}\n\t\n\t\t\tsocket.onmessage = function(data) {\n\t\t\t\ttry {\n\t\t\t\t\tif (wnd.Blob) {\n\t\t\t\t\t\tif (data.data instanceof Blob) {\n\t\t\t\t\t\t\t_this.saveFile(data.data);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet rev_data = JSON.parse(data.data);\n\n\t\t\t\t\tif (rev_data.data.event) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (wnd.CustomEvent) {\n\t\t\t\t\t\t\tvar event = new wnd.CustomEvent(rev_data.data.event, {\n\t\t\t\t\t\t\t\tdetail: rev_data.data\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\twnd.document.dispatchEvent(event);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprocess.emit(rev_data.data.event, rev_data.data)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tlet action = rev_data.action;\n\t\t\t\t\tconst listeners = _this.listeners.get(rev_data.action);\n\t\t\t\t\tif (!listeners) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlisteners.forEach(listener => {\n\t\t\t\t\t\tlistener(rev_data.data, key);\n\t\t\t\t\t})\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * \n\t\t */\n\t\tsend (action, data, room) {\n\t\t\tconst obj = {\n\t\t\t\taction: action,\n\t\t\t\tdata: {...data, uid: commonFunc.GenerateUUID()}\n\t\t\t}\n\t\t\tconst key = this.getKeyByRoom(room);\n\t\t\tconst socket = this.getByRoom(room);\n\n\t\t\tif (socket) {\n\t\t\t\tsocket.send(JSON.stringify(obj));\n\t\t\t} else {\n\t\t\t\tif (this.messageQueue.get(key)) {\n\t\t\t\t\tthis.messageQueue.get(key).push(obj);\n\t\t\t\t} else {\n\t\t\t\t\tthis.messageQueue.set(key, [obj]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tsendFile (file, room) {\n\t\t\tconst socket = this.getByRoom(room);\n\t\t\tif (socket) {\n\t\t\t\tsocket.send(file);\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t * scope: ns/room\n\t\t */\n\t\tlisten(type, callback) {\n\t\t\tif (!this.listeners.get(type)) {\n\t\t\t\tthis.listeners.set(type, [callback]);\n\t\t\t} else {\n\t\t\t\tthis.listeners.get(type).push(callback);\n\t\t\t}\n\t\t}\n\t\t\n\t\treconnect(socket, config) {\n\t\t\tlet _this = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_this.create(config);\n\t\t\t}, 1000)\n\t\t}\n\t\t\n\t\tdestroy(socket, key) {\n\t\t\tif (socket) {\n\t\t\t\tsocket.onerror = socket.onopen = socket.onclose = null;\n\t\t\t\tsocket.close();\n\t\t\t\tsocket = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sockets.get(key)) {\n\t\t\t\tthis.sockets.delete(key);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdestroyByKey(key) {\n\t\t\tlet socket = this.sockets.get(key) \n\t\t\tif (socket) {\n\t\t\t\tthis.destroy(socket, key);\n\t\t\t}\n\t\t}\n\t\t\n\t\tgetKey(namespace, room) {\n\t\t\tlet key = `${this.prefix}`;\n\t\t\tif (namespace && namespace != '') {\n\t\t\t\tif (room &&  room != '') {\n\t\t\t\t\tkey += `/${namespace}/${room}`;\n\t\t\t\t} else {\n\t\t\t\t\tkey +=`/${namespace}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn key;\n\t\t}\n\t\t\n\t\tgetByRoom(room) {\n\t\t\tlet key = this.getKeyByRoom(room)\n\t\t\treturn this.sockets.get(key);\t\n\t\t}\n\t\t\n\t\tgetKeyByRoom(room) {\n\t\t\tlet key = this.globalScope;\n\t\t\tif (room) {\n\t\t\t\tkey = `${this.prefix}/${room}`;\n\t\t\t}\n\t\t\treturn key;\t\t\n\t\t}\n\t\t\n\t\t\n\t\tsaveFile(blob) {\n\t\t\tif (wnd.document) {\n\t\t\t\tconst file_name = this.saveFileName || 'downloadFile';\n\t\t\t\tvar a = wnd.document.createElement(\"a\");\n\t\t        wnd.document.body.appendChild(a);\n\t\t        a.style = \"display: none\";\n\t\t\n\t\t        let url = window.URL.createObjectURL(blob);\n\t\t        a.href = url;\n\t\t        a.download = file_name;\n\t\t        a.click();\n\t\t        wnd.URL.revokeObjectURL(url);\n\t\t\n\t\t        this.saveFileName = ''\n\t\t\t}\n\t\t}\n\t\t\n\t\tlistenAsync(eventname) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tif (wnd.document) { //. browser case\n\t\t\t\t\twnd.document.addEventListener(eventname, function(event) {\n\t\t\t\t\t    resolve(event.detail);\n\t\t\t\t\t}, { once: true })\n\t\t\t\t} else { //. node case\n\t\t\t\t\tprocess.once(eventname, (data) => {\n\t\t\t\t\t\tresolve(data)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n    return CoCreateSocketClient\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/socket-client/src/index.js\n")},"./node_modules/@cocreate/utils/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "generateUUID": () => (/* binding */ generateUUID),\n/* harmony export */   "getParentFromElement": () => (/* binding */ getParentFromElement),\n/* harmony export */   "isJsonString": () => (/* binding */ isJsonString),\n/* harmony export */   "getAttributes": () => (/* binding */ getAttributes),\n/* harmony export */   "checkValue": () => (/* binding */ checkValue),\n/* harmony export */   "allFrame": () => (/* binding */ allFrame),\n/* harmony export */   "cssPath": () => (/* binding */ cssPath),\n/* harmony export */   "getTopMostWindow": () => (/* binding */ getTopMostWindow),\n/* harmony export */   "findIframeFromElement": () => (/* binding */ findIframeFromElement),\n/* harmony export */   "getIframeFromPath": () => (/* binding */ getIframeFromPath),\n/* harmony export */   "configMatch": () => (/* binding */ configMatch),\n/* harmony export */   "configExecuter": () => (/* binding */ configExecuter),\n/* harmony export */   "UUID": () => (/* binding */ UUID),\n/* harmony export */   "parseTextToHtml": () => (/* binding */ parseTextToHtml),\n/* harmony export */   "splitBydelimiter": () => (/* binding */ splitBydelimiter),\n/* harmony export */   "joinBydelimiter": () => (/* binding */ joinBydelimiter),\n/* harmony export */   "isValidSelector": () => (/* binding */ isValidSelector),\n/* harmony export */   "getElementPath": () => (/* binding */ getElementPath),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Created by jin\n * 2020-04-03\n */\n\n\nfunction generateUUID(length = 36) {\n  // if (length == 10) {\n  //   var result           = \'\';\n  //   var characters       = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\';\n  //   var charactersLength = characters.length;\n  //   for ( var i = 0; i < length; i++ ) {\n  //     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  //   }\n\n  //   var dd = new Date().toTimeString();\n  //   var random = dd.replace(/[\\W_]+/g, "").substr(0,6);\n  //   result += random;\n  //   return result;\n  // }\n\n  let d = new Date().getTime();\n  let d2 =\n    (window.performance &&\n      window.performance.now &&\n      window.performance.now() * 1000) ||\n    0;\n  let pattern = "uxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";\n\n  if (length <= pattern.length) {\n    pattern = pattern.substr(0, length);\n  }\n  else {\n    let add_len = length - pattern.length;\n    let sub_pattern = "-xxxyyxxx";\n\n    let group_n = Math.floor(add_len / sub_pattern.length);\n\n    for (let i = 0; i < group_n; i++) {\n      pattern += sub_pattern;\n    }\n\n    group_n = add_len - group_n * sub_pattern.length;\n    pattern += sub_pattern.substr(0, group_n);\n  }\n\n  let uuid = pattern.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16;\n    if (d > 0) {\n      var r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    }\n    else {\n      var r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c == "x" ? r : (r & 0x7) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nfunction getParentFromElement(element, parent_class, attributes) {\n  if (parent_class) {\n    if (element.classList.contains(parent_class)) {\n      return element;\n    }\n\n    let node = element.parentNode;\n    while (node != null && node.classList) {\n      if (node.classList.contains(parent_class)) {\n        return node;\n      }\n      node = node.parentNode;\n    }\n  }\n  else if (attributes) {\n    if (attributes.every((attr) => element.attributes.hasOwnProperty(attr))) {\n      return element;\n    }\n\n    let node = element.parentNode;\n    while (node != null && node.attributes) {\n      if (attributes.every((attr) => node.attributes.hasOwnProperty(attr))) {\n        return node;\n      }\n      node = node.parentNode;\n    }\n  }\n\n  return false;\n}\n\n\nfunction isJsonString(str_data) {\n  try {\n    let json_data = JSON.parse(str_data);\n    if (typeof json_data === "object" && json_data != null) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nfunction getAttributes(element) {\n  return element.getAttributeNames().reduce((attrMap, name) => {\n    attrMap[name] = element.getAttribute(name);\n    return attrMap;\n  }, {});\n}\n\nfunction checkValue(value) {\n  if (!value) return false;\n  if (/{{\\s*([\\w\\W]+)\\s*}}/g.test(value)) {\n    return false;\n  }\n\n  return true;\n}\n// hosseins utills\n\n// function to go through all frames\nfunction allFrame(callback) {\n  let allFrames = [{ document, window }];\n  for (let frame of document.querySelectorAll("iframe")) {\n    let frameDocument = frame.contentDocument || frame.contentWindow.document;\n    let frameWindow = frame.contentWindow;\n    allFrames.push({\n      document: frameDocument,\n      window: frameWindow,\n      frameElement: frame,\n    });\n  }\n  let result = new Set();\n  for (let frame of allFrames) {\n    let callbackResult = callback(frame);\n    if (\n      callbackResult &&\n      typeof callbackResult[Symbol.iterator] === "function"\n    )\n      callbackResult.forEach((el) => result.add(el));\n    else if (callbackResult) result.add(callbackResult);\n  }\n\n  return Array.from(result);\n}\n\nfunction cssPath(node) {\n  let pathSplits = [];\n  do {\n    if (!node || !node.tagName) return false;\n    let pathSplit = node.tagName.toLowerCase();\n    if (node.id && node.tagName !== "BODY") pathSplit += "#" + node.id;\n\n    if (node.classList.length && node.tagName !== "BODY") {\n      node.classList.forEach((item) => {\n        if (item.indexOf(":") === -1) pathSplit += "." + item;\n      });\n    }\n\n    if (node.tagName !== "BODY" && node.parentNode) {\n      let index = Array.prototype.indexOf.call(\n        node.parentNode.children,\n        node\n      );\n      pathSplit += `:nth-child(${index + 1})`;\n    }\n\n    pathSplits.unshift(pathSplit);\n    node = node.parentNode;\n  } while (node.tagName !== "HTML");\n\n  return pathSplits.join(" > ");\n}\n\nfunction getTopMostWindow() {\n  let parentWindow = window;\n  while (parentWindow !== window.parent) parentWindow = window.parent;\n  return parentWindow;\n}\n\nfunction findIframeFromElement(windowObject, element) {\n  let frameElement;\n  allFrame((frame) => {\n    if (frame.document.contains(element)) frameElement = frame.frameElement;\n    // window.cc.findIframeFromElement(frame.window, element);\n  });\n  return frameElement;\n}\n\nfunction getIframeFromPath(path) {\n  let topWindow = getTopMostWindow;\n\n  path.forEach((selector) => {\n    if (topWindow) topWindow = topWindow.querySelector(selector);\n  });\n  return topWindow;\n}\n// DO NOT REMOVE\n\nfunction* configMatch(elementConfig, element) {\n  for (let config of elementConfig) {\n    // if (!Array.isArray(config.selector))\n    //   config.selector = [config.selector];\n\n    if (config.selector && element.matches(config.selector)) yield config;\n  }\n  return;\n}\n\n\n// export function configMatch2(elementConfig, element) {\n//   let result = [];\n//   for (let config of elementConfig) {\n//     if (config.selector && element.matches(config.selector)) result.push(config);\n//   }\n//   return result;\n// }\n\n// DO NOT REMOVE\n\n// an opiniated function uses configMatch2 to read configs\n// WARNING: the config iterated from top to bottom. for deseired effect elementConfig should be reveresed\n// typeof elementConfig: array of objects and every objects containing keys as false, true or a selector \n// element: the element to read attributes\n// key: the key in which is in elementConfig and on match onSuccess callback will be called\nfunction configExecuter(element, key, onSuccess, elementConfig) {\n  for (let config of configMatch(elementConfig || window.elementConfig, element))\n    if (config[key] === true) return onSuccess(element, config);\n    else if (config[key] === false) return false;\n  else if (config[key] === undefined) continue;\n  else if (isValidSelector(config[key]))\n    return onSuccess(element, config, true);\n  else console.warn("builder: wrong element config ", config);\n\n  return false;\n}\n\nfunction UUID(length = 10) {\n  var result = "";\n  var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";\n\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  var d = new Date().toTimeString();\n  var random = d.replace(/[\\W_]+/g, "").substr(0, 6);\n  result += random;\n  return result;\n}\n\nfunction parseTextToHtml(text) {\n  let doc = new DOMParser().parseFromString(text, "text/html");\n  if (doc.head.children[0]) return doc.head.children[0];\n  else return doc.body.children[0];\n}\n\nfunction splitBydelimiter(str, delimiter) {\n  return str.split(delimiter).map((s) => s.trim());\n}\n\nfunction joinBydelimiter(str, delimiter) {\n  return str.map((s) => s.trim()).join(delimiter);\n}\n\nfunction isValidSelector(selector) {\n  try {\n    document.createDocumentFragment().querySelector(selector);\n  }\n  catch (error) {\n    return false;\n  }\n  return true;\n}\n\nfunction getElementPath(element, returnContext) {\n  let path = [];\n\n  let topWindow = window;\n  let iframeElement = findIframeFromElement(topWindow, element);\n  let p = cssPath(iframeElement);\n  if (p) path.unshift(p);\n\n  return returnContext ? { path, document: iframeElement || document } : path;\n  //todo: support for nested iframe\n  // while(iframeElement !== findIframeFromElement(topWindow,iframeElement))\n  // {\n  //   iframeElement = findIframeFromElement(topWindow,iframeElement);\n  //   path.unshift(cssPath(iframeElement))\n  // }\n}\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getElementPath,\n  isValidSelector,\n  joinBydelimiter,\n  splitBydelimiter,\n  parseTextToHtml,\n  UUID,\n  configExecuter,\n  configMatch,\n  getIframeFromPath,\n  findIframeFromElement,\n  getTopMostWindow,\n  cssPath,\n  allFrame,\n  checkValue,\n  getAttributes,\n  isJsonString,\n  getParentFromElement,\n  generateUUID\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@cocreate/utils/src/index.js\n')},"./src/index.js":(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar _crudClient = _interopRequireDefault(__webpack_require__(/*! @cocreate/crud-client */ \"./node_modules/@cocreate/crud-client/src/index.js\"));\n\nvar _filter = _interopRequireDefault(__webpack_require__(/*! @cocreate/filter */ \"./node_modules/@cocreate/filter/src/index.js\"));\n\nvar _observer = _interopRequireDefault(__webpack_require__(/*! @cocreate/observer */ \"./node_modules/@cocreate/observer/src/index.js\"));\n\nvar _logic = _interopRequireDefault(__webpack_require__(/*! @cocreate/logic */ \"./node_modules/@cocreate/logic/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar calOBJs = [];\nvar calendarElClass = 'cal-container';\nconst bgColors = ['#09efc6', '#09ef1a', '#efec09', '#ef8609', '#ef6009', '#b609ef', '#ef0986', '#09efec', '#ecef09', '#09a6ef', '#076692', '#c0b507', '#c04807', '#6b07c0', '#72aeb5', '#69811e', '#8d2b23'];\nconst textColors = ['#8c489f', '#f610e5', '#1013f6', '#1079f6', '#109ff6', '#49f610', '#10f679', '#f61013', '#1310f6', '#f65910', '#f8996c', '#3f4af8', '#3fb7f8', '#94f83f', '#8d514a', '#fff', '#72d4dc'];\n\nfunction initSocketsForCalendars() {\n  _crudClient.default.listen('updateDocument', function (data) {\n    updateCalendar(data);\n  });\n\n  _crudClient.default.listen('deleteDocument', function (data) {\n    deleteDocumentForCalendar(data);\n  });\n\n  _crudClient.default.listen('readDocumentList', function (data) {\n    fetchedCalendarData(data);\n  });\n}\n\nfunction fetchedCalendarData(data) {\n  let calObject = _filter.default.getObjectByFilterId(calOBJs, data['element']);\n\n  if (calObject) {\n    renderDataToCalendar(calObject, data);\n  }\n} ///////////////////////////////////////////////////////////////////////\n\n\nfunction initCalendars(container) {\n  let process_container = container || document;\n\n  if (!process_container.querySelectorAll) {\n    return;\n  }\n\n  let calContainers = process_container.querySelectorAll('.' + calendarElClass);\n\n  if (calContainers.length == 0 && process_container != document && process_container.hasAttribute(calendarElClass)) {\n    calContainers = [process_container];\n  }\n\n  for (var i = 0; i < calContainers.length; i++) {\n    var calContainer = calContainers[i];\n    var id = calContainer.id;\n    if (!id) continue;\n    var cal_id = calContainer.getAttribute('data-calendar_id');\n    var displayName = calContainer.getAttribute('data-dispaly_field');\n\n    let filter = _filter.default.setFilter(calContainer, \"data-calendar_id\", \"calendar\");\n\n    if (!filter) continue;\n\n    if (_observer.default.getInitialized(calContainer)) {\n      continue;\n    }\n\n    _observer.default.setInitialized(calContainer);\n\n    var calendar = new FullCalendar.Calendar(calContainer, {\n      plugins: ['interaction', 'dayGrid', 'timeGrid', 'resourceTimeline', 'timeline', 'list'],\n      height: '100%',\n      editable: true,\n      timeZone: 'local',\n      eventResizableFromStart: true,\n      eventLimit: true,\n      selectable: true,\n      selectMirror: true,\n      // contentHeight: 1200,\n      nowIndicator: true,\n      selectMinDistance: 100,\n      header: {\n        left: 'prev,',\n        center: 'title',\n        right: 'next'\n      },\n      defaultView: 'dayGridMonth',\n      // eventRender: function(event, element, view) {\n      //   return $(event.el);\n      // },\n      eventClick: function (info) {\n        eventClicked(info);\n      },\n      eventResize: function (info) {\n        changedEvent(info);\n      },\n      eventDrop: function (info) {\n        changedEvent(info);\n      },\n      select: function (info) {\n        selectedDates(info);\n      }\n    });\n    calendar.render();\n    var calObj = {\n      eId: id,\n      calendar_id: cal_id,\n      calendar: calendar,\n      displayName: displayName,\n      filter: filter\n    };\n    calContainer.addEventListener(\"changeFilterInput\", function (e) {\n      // removeOldData(eObj.el)\n      //. calenar init\n      calObj.filter.startIndex = 0;\n      CoCreate.filter.fetchData(calObj.filter);\n    });\n    CoCreate.filter.fetchData(filter);\n    calOBJs.push(calObj);\n  }\n}\n\nfunction renderDataToCalendar(calObj, data) {\n  var eventSource = new Array();\n  data['data'].forEach(function (item, index) {\n    var newEvent = {};\n    const {\n      bg_color,\n      text_color\n    } = getRandomColor();\n    newEvent.id = item['_id'];\n    newEvent.title = getTitle(item, calObj.displayName);\n    newEvent.textColor = text_color;\n    newEvent.backgroundColor = bg_color;\n    newEvent.start = item.start_date;\n    newEvent.end = convertEndDateForRender(item.end_date, item.end_time, item.allDay);\n    newEvent.allDay = item.allDay;\n    if (item.start_time) newEvent.start += 'T' + item.start_time;\n    if (item.end_time) newEvent.end += 'T' + item.end_time;\n    if (item.start_date && item.end_date) eventSource.push(newEvent);\n  });\n  calObj.calendar.addEventSource(eventSource);\n}\n\nfunction getRandomColor() {\n  var number = Math.floor(Math.random() * bgColors.length);\n  return {\n    bg_color: bgColors[number],\n    text_color: textColors[number]\n  };\n}\n\nfunction getTitle(doc, displayName) {\n  var title = '';\n\n  if (doc[displayName] && displayName) {\n    title = doc[displayName];\n  }\n\n  return title;\n}\n\nfunction updateCalendar(data) {\n  var collection = data['collection'];\n\n  for (var i = 0; i < calOBJs.length; i++) {\n    var calObj = calOBJs[i];\n\n    if (calObj.filter.collection == collection) {\n      var calendar = calObj.calendar;\n      var eventSource = [];\n      var event = calendar.getEventById(data['document_id']);\n\n      if (event) {\n        var start = event.start;\n        var end = event.end;\n        var start_date = getDateString(start);\n        var start_time = getTimeString(start);\n        var end_date = getDateString(end);\n        var end_time = getTimeString(end);\n        var allDay = event.allDay;\n        var backgroundColor = event.backgroundColor;\n        var textColor = event.textColor;\n        const main_data = data['data'];\n\n        for (var key in main_data) {\n          if (key == calObj.displayName) {\n            var newTitle = main_data[key];\n            event.setProp('title', newTitle);\n          }\n\n          if (key == 'start_date') {\n            start_date = main_data[key];\n          }\n\n          if (key == 'end_date') {\n            end_date = main_data[key];\n          }\n\n          if (key == 'start_time') {\n            start_time = main_data[key];\n          }\n\n          if (key == 'end_time') {\n            end_time = main_data[key];\n          }\n\n          if (key === 'allDay') {\n            allDay = main_data[key];\n          }\n        }\n\n        end_date = convertEndDateForRender(end_date, end_time, allDay);\n        event.setAllDay(allDay);\n        event.setStart(start_date + 'T' + start_time);\n        event.setEnd(end_date + 'T' + end_time);\n      } else {\n        let newEvent = createEventItem(data['data'], calObj.displayName);\n\n        if (newEvent) {\n          eventSource.push(newEvent);\n          calendar.addEventSource(eventSource);\n        }\n      }\n    }\n  }\n}\n\nfunction createEventItem(data, displayName) {\n  var newEvent = new Object();\n  const {\n    bg_color,\n    text_color\n  } = getRandomColor();\n  newEvent.id = data['_id'];\n  newEvent.title = getTitle(data, displayName);\n  newEvent.textColor = 'black';\n  newEvent.backgroundColor = bg_color;\n  newEvent.textColor = text_color;\n  newEvent.start = data.start_date;\n  newEvent.end = convertEndDateForRender(data.end_date, data.end_time, data.allDay);\n  newEvent.allDay = data.allDay;\n  if (data.start_time) newEvent.start += 'T' + data.start_time;\n  if (data.end_time) newEvent.end += 'T' + data.end_time;\n\n  if (!data.start_date || !data.end_date) {\n    return null;\n  }\n\n  return newEvent;\n}\n\nfunction deleteDocumentForCalendar(data) {\n  const document_id = data['document_id'];\n\n  for (var i = 0; i < calOBJs.length; i++) {\n    var calObj = calOBJs[i];\n\n    if (calObj.filter.collection == data['collection']) {\n      removeEvent(calObj.calendar, document_id);\n    }\n  }\n}\n\nfunction removeEvent(calendar, id) {\n  var eventSource = calendar.getEventById(id);\n  eventSource.remove();\n}\n\nfunction eventClicked(info) {\n  console.log(info);\n  var event = info.event;\n  var eventId = event.id;\n  var calendar = event._calendar;\n  var cal_el = calendar.el;\n  var eventLink = cal_el.querySelector('.eventLink');\n  let els = eventLink.querySelectorAll(\"[data-pass_document_id]\");\n  els.forEach(el => {\n    if (!el.getAttribute('data-pass_document_id')) {\n      el.setAttribute('data-pass_document_id', eventId);\n    }\n  });\n\n  _logic.default.initDataPassValues();\n\n  _logic.default.setLinkProcess(eventLink);\n}\n\nfunction changedEvent(info) {\n  var event = info.event;\n  var startDate = getDateString(event.start);\n  var endDate = getDateString(event.end);\n  var startTime = getTimeString(event.start);\n  var endTime = getTimeString(event.end);\n  var cal_id = event._calendar.el.id;\n  var calObj = getCalObjById(cal_id);\n\n  if (calObj) {\n    _crudClient.default.updateDocument({\n      'collection': calObj.filter.collection,\n      'element': cal_id,\n      'metadata': \"\",\n      'document_id': event.id,\n      'data': {\n        start_date: startDate,\n        end_date: endDate,\n        start_time: startTime,\n        end_time: endTime\n      }\n    });\n  }\n}\n\nfunction getDateString(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var dt = date.getDate();\n\n  if (dt < 10) {\n    dt = '0' + dt;\n  }\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  return year + '-' + month + '-' + dt;\n}\n\nfunction getTimeString(date) {\n  var hour = date.getHours();\n  var min = date.getMinutes();\n\n  if (hour < 10) {\n    hour = '0' + hour;\n  }\n\n  if (min < 10) {\n    min = '0' + min;\n  }\n\n  return hour + ':' + min;\n}\n\nfunction getCalObjById(id) {\n  for (var i = 0; i < calOBJs.length; i++) {\n    var calObj = calOBJs[i];\n    if (id == calObj.eId) return calObj;\n  }\n\n  return null;\n}\n\nfunction selectedDates(info) {\n  var startDate = getDateString(info.start);\n  var endDate = getDateString(info.end);\n  var startTime = getTimeString(info.start);\n  var endTime = getTimeString(info.end);\n  var cal_id = info.view.calendar.el.id;\n  var calObj = getCalObjById(cal_id);\n\n  if (calObj) {\n    const eventLink = info.view.calendar.el.querySelector('.eventLink');\n    let els = eventLink.querySelectorAll(\"[data-pass_document_id]\");\n    els.forEach(el => {\n      if (!el.getAttribute('data-pass_document_id')) {\n        el.setAttribute('data-pass_document_id', \"\");\n      }\n    });\n\n    _logic.default.setDataPassValues({\n      start_date: startDate,\n      end_date: endDate,\n      start_time: startTime,\n      end_time: endTime\n    });\n\n    _logic.default.setLinkProcess(eventLink);\n  }\n}\n\nfunction initCalendarButtons(container) {\n  let main_container = container || document;\n\n  if (!main_container.querySelectorAll) {\n    return;\n  }\n\n  var btns = main_container.querySelectorAll('[data-calendar_id][data-btn_type]');\n\n  if (btns.length === 0 && main_container != document && main_container.hasAttribute('data-btn_type') && main_container.hasAttribute('data-calendar_id')) {\n    btns = [main_container];\n  }\n\n  for (var i = 0; i < btns.length; i++) {\n    var btn = btns[i];\n\n    if (_observer.default.getInitialized(btn)) {\n      continue;\n    }\n\n    _observer.default.setInitialized(btn);\n\n    btn.addEventListener('click', function (e) {\n      e.preventDefault();\n      var type = this.getAttribute('data-btn_type');\n      var calId = this.getAttribute('data-calendar_id');\n      calendarBtnClicked(calId, type);\n    });\n  }\n}\n\nfunction convertEndDateForRender(end, end_time, allDay) {\n  if (!allDay) {\n    return end;\n  }\n\n  return end;\n  let endDate = new Date(end);\n  endDate.setDate(endDate.getDate() + 1);\n  return endDate.toISOString().split('T')[0];\n}\n\nfunction calendarBtnClicked(calId, type) {\n  if (!calId) return;\n\n  for (var i = 0; i < calOBJs.length; i++) {\n    var calObj = calOBJs[i];\n\n    if (calObj.eId == calId) {\n      var calendar = calObj.calendar;\n      console.log(type);\n\n      switch (type) {\n        case 'dayGridDay':\n          // code\n          calendar.changeView('dayGridDay'); ////   dayGridDay\n\n          break;\n\n        case 'dayGridWeek':\n          // code\n          calendar.changeView('dayGridWeek'); ////  dayGridWeek\n\n          break;\n\n        case 'dayGridMonth':\n          // code\n          calendar.changeView('dayGridMonth'); ///   dayGridMonth\n\n          break;\n\n        case 'resourceTimelineDay':\n          // code\n          calendar.changeView('resourceTimelineDay'); ///   resourceTimelineDay\n\n          break;\n\n        case 'resourceTimelineThreeDays':\n          // code\n          calendar.changeView('resourceTimelineThreeDays'); ///   resourceTimelineThreeDays\n\n          break;\n\n        case 'resourceTimelineFiveDays':\n          // code\n          calendar.changeView('resourceTimelineFiveDays'); ///   resourceTimelineFiveDays\n\n          break;\n\n        case 'timeGridWeek':\n          // code\n          calendar.changeView('timeGridWeek'); ///   timeGridWeek\n\n          break;\n\n        case 'timeGridDay':\n          // code\n          calendar.changeView('timeGridDay'); ///   timeGridDay\n\n          break;\n\n        case 'listDay':\n          // code\n          calendar.changeView('listDay'); ///   listDay\n\n          break;\n\n        case 'listWeek':\n          // code\n          calendar.changeView('listWeek'); ///   listWeek\n\n          break;\n\n        case 'listMonth':\n          // code\n          calendar.changeView('listMonth'); ///   listMonth\n\n          break;\n\n        case 'listYear':\n          // code\n          calendar.changeView('listYear'); ///   listYear\n\n          break;\n\n        case 'timelineWeek':\n          // code\n          calendar.changeView('timelineWeek'); ///   timelineWeek\n\n          break;\n\n        case 'today':\n          // code\n          calendar.today(); ///   today\n\n          break;\n\n        default: // code\n\n      }\n    }\n  }\n}\n/** init **/\n\n\ninitSocketsForCalendars();\ninitCalendars();\ninitCalendarButtons();\n\n_observer.default.register('CoCreateCalendar', window, initCalendars); // CoCreate.observer.init({\n// \tname: 'CoCreateCalendar', \n// \tobserve: ['subtree', 'childList'],\n// \tinclude: '[data-calendar_id]', \n// \tcallback: function(mutation) {\n// \t\tinitCalendars(mutation.target)\n// \t}\n// })\n\n\n_observer.default.register('CoCreateCalendar_btn', window, initCalendarButtons); // CoCreate.observer.init({\n// \tname: 'CoCreateCalendarBtn', \n// \tobserve: ['subtree', 'childList'],\n// \tinclude: '[data-calendar_id][data-btn_type]', \n// \tcallback: function(mutation) {\n// \t\tinitCalendarButtons(mutation.target)\n// \t}\n// })//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n")}},__webpack_module_cache__={};function __webpack_require__(t){var n=__webpack_module_cache__[t];if(void 0!==n)return n.exports;var e=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t].call(e.exports,e,e.exports,__webpack_require__),e.exports}__webpack_require__.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(t,n)=>{for(var e in n)__webpack_require__.o(n,e)&&!__webpack_require__.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},__webpack_require__.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()}));